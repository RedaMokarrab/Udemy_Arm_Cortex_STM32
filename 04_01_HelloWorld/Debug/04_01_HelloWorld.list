
04_01_HelloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000121c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ac  080013bc  080013bc  000113bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001468  08001468  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001468  08001468  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001468  08001468  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001468  08001468  00011468  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800146c  0800146c  0001146c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001470  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000038  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000009c  2000009c  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002373  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000605  00000000  00000000  00022401  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00022a08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e0  00000000  00000000  00022b20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002bf6  00000000  00000000  00022c00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001326  00000000  00000000  000257f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000096f3  00000000  00000000  00026b1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0003020f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b44  00000000  00000000  00030264  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080013a4 	.word	0x080013a4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080013a4 	.word	0x080013a4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af00      	add	r7, sp, #0

	unsigned int counter=0;
 8000286:	2300      	movs	r3, #0
 8000288:	607b      	str	r3, [r7, #4]

	while(1)
	{
        /* Loop forever */
		if(counter%10000 == 0)
 800028a:	687a      	ldr	r2, [r7, #4]
 800028c:	4b09      	ldr	r3, [pc, #36]	; (80002b4 <main+0x34>)
 800028e:	fba3 1302 	umull	r1, r3, r3, r2
 8000292:	0b5b      	lsrs	r3, r3, #13
 8000294:	f242 7110 	movw	r1, #10000	; 0x2710
 8000298:	fb01 f303 	mul.w	r3, r1, r3
 800029c:	1ad3      	subs	r3, r2, r3
 800029e:	2b00      	cmp	r3, #0
 80002a0:	d103      	bne.n	80002aa <main+0x2a>
			printf("Hello World: %d\n",counter);
 80002a2:	6879      	ldr	r1, [r7, #4]
 80002a4:	4804      	ldr	r0, [pc, #16]	; (80002b8 <main+0x38>)
 80002a6:	f000 f92b 	bl	8000500 <iprintf>
		counter++;
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	3301      	adds	r3, #1
 80002ae:	607b      	str	r3, [r7, #4]
		if(counter%10000 == 0)
 80002b0:	e7eb      	b.n	800028a <main+0xa>
 80002b2:	bf00      	nop
 80002b4:	d1b71759 	.word	0xd1b71759
 80002b8:	080013bc 	.word	0x080013bc

080002bc <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002bc:	b480      	push	{r7}
 80002be:	b083      	sub	sp, #12
 80002c0:	af00      	add	r7, sp, #0
 80002c2:	4603      	mov	r3, r0
 80002c4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002c6:	4b0e      	ldr	r3, [pc, #56]	; (8000300 <ITM_SendChar+0x44>)
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	4a0d      	ldr	r2, [pc, #52]	; (8000300 <ITM_SendChar+0x44>)
 80002cc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002d0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002d2:	4b0c      	ldr	r3, [pc, #48]	; (8000304 <ITM_SendChar+0x48>)
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	4a0b      	ldr	r2, [pc, #44]	; (8000304 <ITM_SendChar+0x48>)
 80002d8:	f043 0301 	orr.w	r3, r3, #1
 80002dc:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002de:	bf00      	nop
 80002e0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	f003 0301 	and.w	r3, r3, #1
 80002ea:	2b00      	cmp	r3, #0
 80002ec:	d0f8      	beq.n	80002e0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002ee:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80002f2:	79fb      	ldrb	r3, [r7, #7]
 80002f4:	6013      	str	r3, [r2, #0]
}
 80002f6:	bf00      	nop
 80002f8:	370c      	adds	r7, #12
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bc80      	pop	{r7}
 80002fe:	4770      	bx	lr
 8000300:	e000edfc 	.word	0xe000edfc
 8000304:	e0000e00 	.word	0xe0000e00

08000308 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000308:	b580      	push	{r7, lr}
 800030a:	b086      	sub	sp, #24
 800030c:	af00      	add	r7, sp, #0
 800030e:	60f8      	str	r0, [r7, #12]
 8000310:	60b9      	str	r1, [r7, #8]
 8000312:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000314:	2300      	movs	r3, #0
 8000316:	617b      	str	r3, [r7, #20]
 8000318:	e00a      	b.n	8000330 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800031a:	f3af 8000 	nop.w
 800031e:	4601      	mov	r1, r0
 8000320:	68bb      	ldr	r3, [r7, #8]
 8000322:	1c5a      	adds	r2, r3, #1
 8000324:	60ba      	str	r2, [r7, #8]
 8000326:	b2ca      	uxtb	r2, r1
 8000328:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032a:	697b      	ldr	r3, [r7, #20]
 800032c:	3301      	adds	r3, #1
 800032e:	617b      	str	r3, [r7, #20]
 8000330:	697a      	ldr	r2, [r7, #20]
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	429a      	cmp	r2, r3
 8000336:	dbf0      	blt.n	800031a <_read+0x12>
	}

return len;
 8000338:	687b      	ldr	r3, [r7, #4]
}
 800033a:	4618      	mov	r0, r3
 800033c:	3718      	adds	r7, #24
 800033e:	46bd      	mov	sp, r7
 8000340:	bd80      	pop	{r7, pc}

08000342 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000342:	b580      	push	{r7, lr}
 8000344:	b086      	sub	sp, #24
 8000346:	af00      	add	r7, sp, #0
 8000348:	60f8      	str	r0, [r7, #12]
 800034a:	60b9      	str	r1, [r7, #8]
 800034c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034e:	2300      	movs	r3, #0
 8000350:	617b      	str	r3, [r7, #20]
 8000352:	e009      	b.n	8000368 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000354:	68bb      	ldr	r3, [r7, #8]
 8000356:	1c5a      	adds	r2, r3, #1
 8000358:	60ba      	str	r2, [r7, #8]
 800035a:	781b      	ldrb	r3, [r3, #0]
 800035c:	4618      	mov	r0, r3
 800035e:	f7ff ffad 	bl	80002bc <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000362:	697b      	ldr	r3, [r7, #20]
 8000364:	3301      	adds	r3, #1
 8000366:	617b      	str	r3, [r7, #20]
 8000368:	697a      	ldr	r2, [r7, #20]
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	429a      	cmp	r2, r3
 800036e:	dbf1      	blt.n	8000354 <_write+0x12>
	}
	return len;
 8000370:	687b      	ldr	r3, [r7, #4]
}
 8000372:	4618      	mov	r0, r3
 8000374:	3718      	adds	r7, #24
 8000376:	46bd      	mov	sp, r7
 8000378:	bd80      	pop	{r7, pc}

0800037a <_close>:

int _close(int file)
{
 800037a:	b480      	push	{r7}
 800037c:	b083      	sub	sp, #12
 800037e:	af00      	add	r7, sp, #0
 8000380:	6078      	str	r0, [r7, #4]
	return -1;
 8000382:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000386:	4618      	mov	r0, r3
 8000388:	370c      	adds	r7, #12
 800038a:	46bd      	mov	sp, r7
 800038c:	bc80      	pop	{r7}
 800038e:	4770      	bx	lr

08000390 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000390:	b480      	push	{r7}
 8000392:	b083      	sub	sp, #12
 8000394:	af00      	add	r7, sp, #0
 8000396:	6078      	str	r0, [r7, #4]
 8000398:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800039a:	683b      	ldr	r3, [r7, #0]
 800039c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003a0:	605a      	str	r2, [r3, #4]
	return 0;
 80003a2:	2300      	movs	r3, #0
}
 80003a4:	4618      	mov	r0, r3
 80003a6:	370c      	adds	r7, #12
 80003a8:	46bd      	mov	sp, r7
 80003aa:	bc80      	pop	{r7}
 80003ac:	4770      	bx	lr

080003ae <_isatty>:

int _isatty(int file)
{
 80003ae:	b480      	push	{r7}
 80003b0:	b083      	sub	sp, #12
 80003b2:	af00      	add	r7, sp, #0
 80003b4:	6078      	str	r0, [r7, #4]
	return 1;
 80003b6:	2301      	movs	r3, #1
}
 80003b8:	4618      	mov	r0, r3
 80003ba:	370c      	adds	r7, #12
 80003bc:	46bd      	mov	sp, r7
 80003be:	bc80      	pop	{r7}
 80003c0:	4770      	bx	lr

080003c2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003c2:	b480      	push	{r7}
 80003c4:	b085      	sub	sp, #20
 80003c6:	af00      	add	r7, sp, #0
 80003c8:	60f8      	str	r0, [r7, #12]
 80003ca:	60b9      	str	r1, [r7, #8]
 80003cc:	607a      	str	r2, [r7, #4]
	return 0;
 80003ce:	2300      	movs	r3, #0
}
 80003d0:	4618      	mov	r0, r3
 80003d2:	3714      	adds	r7, #20
 80003d4:	46bd      	mov	sp, r7
 80003d6:	bc80      	pop	{r7}
 80003d8:	4770      	bx	lr
	...

080003dc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003dc:	b580      	push	{r7, lr}
 80003de:	b086      	sub	sp, #24
 80003e0:	af00      	add	r7, sp, #0
 80003e2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003e4:	4a14      	ldr	r2, [pc, #80]	; (8000438 <_sbrk+0x5c>)
 80003e6:	4b15      	ldr	r3, [pc, #84]	; (800043c <_sbrk+0x60>)
 80003e8:	1ad3      	subs	r3, r2, r3
 80003ea:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003ec:	697b      	ldr	r3, [r7, #20]
 80003ee:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003f0:	4b13      	ldr	r3, [pc, #76]	; (8000440 <_sbrk+0x64>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	2b00      	cmp	r3, #0
 80003f6:	d102      	bne.n	80003fe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003f8:	4b11      	ldr	r3, [pc, #68]	; (8000440 <_sbrk+0x64>)
 80003fa:	4a12      	ldr	r2, [pc, #72]	; (8000444 <_sbrk+0x68>)
 80003fc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003fe:	4b10      	ldr	r3, [pc, #64]	; (8000440 <_sbrk+0x64>)
 8000400:	681a      	ldr	r2, [r3, #0]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4413      	add	r3, r2
 8000406:	693a      	ldr	r2, [r7, #16]
 8000408:	429a      	cmp	r2, r3
 800040a:	d207      	bcs.n	800041c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800040c:	f000 f846 	bl	800049c <__errno>
 8000410:	4603      	mov	r3, r0
 8000412:	220c      	movs	r2, #12
 8000414:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000416:	f04f 33ff 	mov.w	r3, #4294967295
 800041a:	e009      	b.n	8000430 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800041c:	4b08      	ldr	r3, [pc, #32]	; (8000440 <_sbrk+0x64>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000422:	4b07      	ldr	r3, [pc, #28]	; (8000440 <_sbrk+0x64>)
 8000424:	681a      	ldr	r2, [r3, #0]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4413      	add	r3, r2
 800042a:	4a05      	ldr	r2, [pc, #20]	; (8000440 <_sbrk+0x64>)
 800042c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800042e:	68fb      	ldr	r3, [r7, #12]
}
 8000430:	4618      	mov	r0, r3
 8000432:	3718      	adds	r7, #24
 8000434:	46bd      	mov	sp, r7
 8000436:	bd80      	pop	{r7, pc}
 8000438:	2000a000 	.word	0x2000a000
 800043c:	00000400 	.word	0x00000400
 8000440:	20000080 	.word	0x20000080
 8000444:	200000a0 	.word	0x200000a0

08000448 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000448:	480d      	ldr	r0, [pc, #52]	; (8000480 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800044a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800044c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000450:	480c      	ldr	r0, [pc, #48]	; (8000484 <LoopForever+0x6>)
  ldr r1, =_edata
 8000452:	490d      	ldr	r1, [pc, #52]	; (8000488 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000454:	4a0d      	ldr	r2, [pc, #52]	; (800048c <LoopForever+0xe>)
  movs r3, #0
 8000456:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000458:	e002      	b.n	8000460 <LoopCopyDataInit>

0800045a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800045a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800045c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800045e:	3304      	adds	r3, #4

08000460 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000460:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000462:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000464:	d3f9      	bcc.n	800045a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000466:	4a0a      	ldr	r2, [pc, #40]	; (8000490 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000468:	4c0a      	ldr	r4, [pc, #40]	; (8000494 <LoopForever+0x16>)
  movs r3, #0
 800046a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800046c:	e001      	b.n	8000472 <LoopFillZerobss>

0800046e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800046e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000470:	3204      	adds	r2, #4

08000472 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000472:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000474:	d3fb      	bcc.n	800046e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000476:	f000 f817 	bl	80004a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800047a:	f7ff ff01 	bl	8000280 <main>

0800047e <LoopForever>:

LoopForever:
    b LoopForever
 800047e:	e7fe      	b.n	800047e <LoopForever>
  ldr   r0, =_estack
 8000480:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 8000484:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000488:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800048c:	08001470 	.word	0x08001470
  ldr r2, =_sbss
 8000490:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000494:	2000009c 	.word	0x2000009c

08000498 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000498:	e7fe      	b.n	8000498 <ADC1_2_IRQHandler>
	...

0800049c <__errno>:
 800049c:	4b01      	ldr	r3, [pc, #4]	; (80004a4 <__errno+0x8>)
 800049e:	6818      	ldr	r0, [r3, #0]
 80004a0:	4770      	bx	lr
 80004a2:	bf00      	nop
 80004a4:	20000000 	.word	0x20000000

080004a8 <__libc_init_array>:
 80004a8:	b570      	push	{r4, r5, r6, lr}
 80004aa:	4d0d      	ldr	r5, [pc, #52]	; (80004e0 <__libc_init_array+0x38>)
 80004ac:	4c0d      	ldr	r4, [pc, #52]	; (80004e4 <__libc_init_array+0x3c>)
 80004ae:	1b64      	subs	r4, r4, r5
 80004b0:	10a4      	asrs	r4, r4, #2
 80004b2:	2600      	movs	r6, #0
 80004b4:	42a6      	cmp	r6, r4
 80004b6:	d109      	bne.n	80004cc <__libc_init_array+0x24>
 80004b8:	4d0b      	ldr	r5, [pc, #44]	; (80004e8 <__libc_init_array+0x40>)
 80004ba:	4c0c      	ldr	r4, [pc, #48]	; (80004ec <__libc_init_array+0x44>)
 80004bc:	f000 ff72 	bl	80013a4 <_init>
 80004c0:	1b64      	subs	r4, r4, r5
 80004c2:	10a4      	asrs	r4, r4, #2
 80004c4:	2600      	movs	r6, #0
 80004c6:	42a6      	cmp	r6, r4
 80004c8:	d105      	bne.n	80004d6 <__libc_init_array+0x2e>
 80004ca:	bd70      	pop	{r4, r5, r6, pc}
 80004cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80004d0:	4798      	blx	r3
 80004d2:	3601      	adds	r6, #1
 80004d4:	e7ee      	b.n	80004b4 <__libc_init_array+0xc>
 80004d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80004da:	4798      	blx	r3
 80004dc:	3601      	adds	r6, #1
 80004de:	e7f2      	b.n	80004c6 <__libc_init_array+0x1e>
 80004e0:	08001468 	.word	0x08001468
 80004e4:	08001468 	.word	0x08001468
 80004e8:	08001468 	.word	0x08001468
 80004ec:	0800146c 	.word	0x0800146c

080004f0 <memset>:
 80004f0:	4402      	add	r2, r0
 80004f2:	4603      	mov	r3, r0
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d100      	bne.n	80004fa <memset+0xa>
 80004f8:	4770      	bx	lr
 80004fa:	f803 1b01 	strb.w	r1, [r3], #1
 80004fe:	e7f9      	b.n	80004f4 <memset+0x4>

08000500 <iprintf>:
 8000500:	b40f      	push	{r0, r1, r2, r3}
 8000502:	4b0a      	ldr	r3, [pc, #40]	; (800052c <iprintf+0x2c>)
 8000504:	b513      	push	{r0, r1, r4, lr}
 8000506:	681c      	ldr	r4, [r3, #0]
 8000508:	b124      	cbz	r4, 8000514 <iprintf+0x14>
 800050a:	69a3      	ldr	r3, [r4, #24]
 800050c:	b913      	cbnz	r3, 8000514 <iprintf+0x14>
 800050e:	4620      	mov	r0, r4
 8000510:	f000 f866 	bl	80005e0 <__sinit>
 8000514:	ab05      	add	r3, sp, #20
 8000516:	9a04      	ldr	r2, [sp, #16]
 8000518:	68a1      	ldr	r1, [r4, #8]
 800051a:	9301      	str	r3, [sp, #4]
 800051c:	4620      	mov	r0, r4
 800051e:	f000 f981 	bl	8000824 <_vfiprintf_r>
 8000522:	b002      	add	sp, #8
 8000524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000528:	b004      	add	sp, #16
 800052a:	4770      	bx	lr
 800052c:	20000000 	.word	0x20000000

08000530 <std>:
 8000530:	2300      	movs	r3, #0
 8000532:	b510      	push	{r4, lr}
 8000534:	4604      	mov	r4, r0
 8000536:	e9c0 3300 	strd	r3, r3, [r0]
 800053a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800053e:	6083      	str	r3, [r0, #8]
 8000540:	8181      	strh	r1, [r0, #12]
 8000542:	6643      	str	r3, [r0, #100]	; 0x64
 8000544:	81c2      	strh	r2, [r0, #14]
 8000546:	6183      	str	r3, [r0, #24]
 8000548:	4619      	mov	r1, r3
 800054a:	2208      	movs	r2, #8
 800054c:	305c      	adds	r0, #92	; 0x5c
 800054e:	f7ff ffcf 	bl	80004f0 <memset>
 8000552:	4b05      	ldr	r3, [pc, #20]	; (8000568 <std+0x38>)
 8000554:	6263      	str	r3, [r4, #36]	; 0x24
 8000556:	4b05      	ldr	r3, [pc, #20]	; (800056c <std+0x3c>)
 8000558:	62a3      	str	r3, [r4, #40]	; 0x28
 800055a:	4b05      	ldr	r3, [pc, #20]	; (8000570 <std+0x40>)
 800055c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800055e:	4b05      	ldr	r3, [pc, #20]	; (8000574 <std+0x44>)
 8000560:	6224      	str	r4, [r4, #32]
 8000562:	6323      	str	r3, [r4, #48]	; 0x30
 8000564:	bd10      	pop	{r4, pc}
 8000566:	bf00      	nop
 8000568:	08000dcd 	.word	0x08000dcd
 800056c:	08000def 	.word	0x08000def
 8000570:	08000e27 	.word	0x08000e27
 8000574:	08000e4b 	.word	0x08000e4b

08000578 <_cleanup_r>:
 8000578:	4901      	ldr	r1, [pc, #4]	; (8000580 <_cleanup_r+0x8>)
 800057a:	f000 b8af 	b.w	80006dc <_fwalk_reent>
 800057e:	bf00      	nop
 8000580:	08001125 	.word	0x08001125

08000584 <__sfmoreglue>:
 8000584:	b570      	push	{r4, r5, r6, lr}
 8000586:	1e4a      	subs	r2, r1, #1
 8000588:	2568      	movs	r5, #104	; 0x68
 800058a:	4355      	muls	r5, r2
 800058c:	460e      	mov	r6, r1
 800058e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000592:	f000 f8c5 	bl	8000720 <_malloc_r>
 8000596:	4604      	mov	r4, r0
 8000598:	b140      	cbz	r0, 80005ac <__sfmoreglue+0x28>
 800059a:	2100      	movs	r1, #0
 800059c:	e9c0 1600 	strd	r1, r6, [r0]
 80005a0:	300c      	adds	r0, #12
 80005a2:	60a0      	str	r0, [r4, #8]
 80005a4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80005a8:	f7ff ffa2 	bl	80004f0 <memset>
 80005ac:	4620      	mov	r0, r4
 80005ae:	bd70      	pop	{r4, r5, r6, pc}

080005b0 <__sfp_lock_acquire>:
 80005b0:	4801      	ldr	r0, [pc, #4]	; (80005b8 <__sfp_lock_acquire+0x8>)
 80005b2:	f000 b8b3 	b.w	800071c <__retarget_lock_acquire_recursive>
 80005b6:	bf00      	nop
 80005b8:	20000094 	.word	0x20000094

080005bc <__sfp_lock_release>:
 80005bc:	4801      	ldr	r0, [pc, #4]	; (80005c4 <__sfp_lock_release+0x8>)
 80005be:	f000 b8ae 	b.w	800071e <__retarget_lock_release_recursive>
 80005c2:	bf00      	nop
 80005c4:	20000094 	.word	0x20000094

080005c8 <__sinit_lock_acquire>:
 80005c8:	4801      	ldr	r0, [pc, #4]	; (80005d0 <__sinit_lock_acquire+0x8>)
 80005ca:	f000 b8a7 	b.w	800071c <__retarget_lock_acquire_recursive>
 80005ce:	bf00      	nop
 80005d0:	2000008f 	.word	0x2000008f

080005d4 <__sinit_lock_release>:
 80005d4:	4801      	ldr	r0, [pc, #4]	; (80005dc <__sinit_lock_release+0x8>)
 80005d6:	f000 b8a2 	b.w	800071e <__retarget_lock_release_recursive>
 80005da:	bf00      	nop
 80005dc:	2000008f 	.word	0x2000008f

080005e0 <__sinit>:
 80005e0:	b510      	push	{r4, lr}
 80005e2:	4604      	mov	r4, r0
 80005e4:	f7ff fff0 	bl	80005c8 <__sinit_lock_acquire>
 80005e8:	69a3      	ldr	r3, [r4, #24]
 80005ea:	b11b      	cbz	r3, 80005f4 <__sinit+0x14>
 80005ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005f0:	f7ff bff0 	b.w	80005d4 <__sinit_lock_release>
 80005f4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80005f8:	6523      	str	r3, [r4, #80]	; 0x50
 80005fa:	4b13      	ldr	r3, [pc, #76]	; (8000648 <__sinit+0x68>)
 80005fc:	4a13      	ldr	r2, [pc, #76]	; (800064c <__sinit+0x6c>)
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	62a2      	str	r2, [r4, #40]	; 0x28
 8000602:	42a3      	cmp	r3, r4
 8000604:	bf04      	itt	eq
 8000606:	2301      	moveq	r3, #1
 8000608:	61a3      	streq	r3, [r4, #24]
 800060a:	4620      	mov	r0, r4
 800060c:	f000 f820 	bl	8000650 <__sfp>
 8000610:	6060      	str	r0, [r4, #4]
 8000612:	4620      	mov	r0, r4
 8000614:	f000 f81c 	bl	8000650 <__sfp>
 8000618:	60a0      	str	r0, [r4, #8]
 800061a:	4620      	mov	r0, r4
 800061c:	f000 f818 	bl	8000650 <__sfp>
 8000620:	2200      	movs	r2, #0
 8000622:	60e0      	str	r0, [r4, #12]
 8000624:	2104      	movs	r1, #4
 8000626:	6860      	ldr	r0, [r4, #4]
 8000628:	f7ff ff82 	bl	8000530 <std>
 800062c:	68a0      	ldr	r0, [r4, #8]
 800062e:	2201      	movs	r2, #1
 8000630:	2109      	movs	r1, #9
 8000632:	f7ff ff7d 	bl	8000530 <std>
 8000636:	68e0      	ldr	r0, [r4, #12]
 8000638:	2202      	movs	r2, #2
 800063a:	2112      	movs	r1, #18
 800063c:	f7ff ff78 	bl	8000530 <std>
 8000640:	2301      	movs	r3, #1
 8000642:	61a3      	str	r3, [r4, #24]
 8000644:	e7d2      	b.n	80005ec <__sinit+0xc>
 8000646:	bf00      	nop
 8000648:	080013d0 	.word	0x080013d0
 800064c:	08000579 	.word	0x08000579

08000650 <__sfp>:
 8000650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000652:	4607      	mov	r7, r0
 8000654:	f7ff ffac 	bl	80005b0 <__sfp_lock_acquire>
 8000658:	4b1e      	ldr	r3, [pc, #120]	; (80006d4 <__sfp+0x84>)
 800065a:	681e      	ldr	r6, [r3, #0]
 800065c:	69b3      	ldr	r3, [r6, #24]
 800065e:	b913      	cbnz	r3, 8000666 <__sfp+0x16>
 8000660:	4630      	mov	r0, r6
 8000662:	f7ff ffbd 	bl	80005e0 <__sinit>
 8000666:	3648      	adds	r6, #72	; 0x48
 8000668:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800066c:	3b01      	subs	r3, #1
 800066e:	d503      	bpl.n	8000678 <__sfp+0x28>
 8000670:	6833      	ldr	r3, [r6, #0]
 8000672:	b30b      	cbz	r3, 80006b8 <__sfp+0x68>
 8000674:	6836      	ldr	r6, [r6, #0]
 8000676:	e7f7      	b.n	8000668 <__sfp+0x18>
 8000678:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800067c:	b9d5      	cbnz	r5, 80006b4 <__sfp+0x64>
 800067e:	4b16      	ldr	r3, [pc, #88]	; (80006d8 <__sfp+0x88>)
 8000680:	60e3      	str	r3, [r4, #12]
 8000682:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000686:	6665      	str	r5, [r4, #100]	; 0x64
 8000688:	f000 f847 	bl	800071a <__retarget_lock_init_recursive>
 800068c:	f7ff ff96 	bl	80005bc <__sfp_lock_release>
 8000690:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000694:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000698:	6025      	str	r5, [r4, #0]
 800069a:	61a5      	str	r5, [r4, #24]
 800069c:	2208      	movs	r2, #8
 800069e:	4629      	mov	r1, r5
 80006a0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80006a4:	f7ff ff24 	bl	80004f0 <memset>
 80006a8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80006ac:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80006b0:	4620      	mov	r0, r4
 80006b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006b4:	3468      	adds	r4, #104	; 0x68
 80006b6:	e7d9      	b.n	800066c <__sfp+0x1c>
 80006b8:	2104      	movs	r1, #4
 80006ba:	4638      	mov	r0, r7
 80006bc:	f7ff ff62 	bl	8000584 <__sfmoreglue>
 80006c0:	4604      	mov	r4, r0
 80006c2:	6030      	str	r0, [r6, #0]
 80006c4:	2800      	cmp	r0, #0
 80006c6:	d1d5      	bne.n	8000674 <__sfp+0x24>
 80006c8:	f7ff ff78 	bl	80005bc <__sfp_lock_release>
 80006cc:	230c      	movs	r3, #12
 80006ce:	603b      	str	r3, [r7, #0]
 80006d0:	e7ee      	b.n	80006b0 <__sfp+0x60>
 80006d2:	bf00      	nop
 80006d4:	080013d0 	.word	0x080013d0
 80006d8:	ffff0001 	.word	0xffff0001

080006dc <_fwalk_reent>:
 80006dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006e0:	4606      	mov	r6, r0
 80006e2:	4688      	mov	r8, r1
 80006e4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80006e8:	2700      	movs	r7, #0
 80006ea:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006ee:	f1b9 0901 	subs.w	r9, r9, #1
 80006f2:	d505      	bpl.n	8000700 <_fwalk_reent+0x24>
 80006f4:	6824      	ldr	r4, [r4, #0]
 80006f6:	2c00      	cmp	r4, #0
 80006f8:	d1f7      	bne.n	80006ea <_fwalk_reent+0xe>
 80006fa:	4638      	mov	r0, r7
 80006fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000700:	89ab      	ldrh	r3, [r5, #12]
 8000702:	2b01      	cmp	r3, #1
 8000704:	d907      	bls.n	8000716 <_fwalk_reent+0x3a>
 8000706:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800070a:	3301      	adds	r3, #1
 800070c:	d003      	beq.n	8000716 <_fwalk_reent+0x3a>
 800070e:	4629      	mov	r1, r5
 8000710:	4630      	mov	r0, r6
 8000712:	47c0      	blx	r8
 8000714:	4307      	orrs	r7, r0
 8000716:	3568      	adds	r5, #104	; 0x68
 8000718:	e7e9      	b.n	80006ee <_fwalk_reent+0x12>

0800071a <__retarget_lock_init_recursive>:
 800071a:	4770      	bx	lr

0800071c <__retarget_lock_acquire_recursive>:
 800071c:	4770      	bx	lr

0800071e <__retarget_lock_release_recursive>:
 800071e:	4770      	bx	lr

08000720 <_malloc_r>:
 8000720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000722:	1ccd      	adds	r5, r1, #3
 8000724:	f025 0503 	bic.w	r5, r5, #3
 8000728:	3508      	adds	r5, #8
 800072a:	2d0c      	cmp	r5, #12
 800072c:	bf38      	it	cc
 800072e:	250c      	movcc	r5, #12
 8000730:	2d00      	cmp	r5, #0
 8000732:	4606      	mov	r6, r0
 8000734:	db01      	blt.n	800073a <_malloc_r+0x1a>
 8000736:	42a9      	cmp	r1, r5
 8000738:	d903      	bls.n	8000742 <_malloc_r+0x22>
 800073a:	230c      	movs	r3, #12
 800073c:	6033      	str	r3, [r6, #0]
 800073e:	2000      	movs	r0, #0
 8000740:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000742:	f000 fda1 	bl	8001288 <__malloc_lock>
 8000746:	4921      	ldr	r1, [pc, #132]	; (80007cc <_malloc_r+0xac>)
 8000748:	680a      	ldr	r2, [r1, #0]
 800074a:	4614      	mov	r4, r2
 800074c:	b99c      	cbnz	r4, 8000776 <_malloc_r+0x56>
 800074e:	4f20      	ldr	r7, [pc, #128]	; (80007d0 <_malloc_r+0xb0>)
 8000750:	683b      	ldr	r3, [r7, #0]
 8000752:	b923      	cbnz	r3, 800075e <_malloc_r+0x3e>
 8000754:	4621      	mov	r1, r4
 8000756:	4630      	mov	r0, r6
 8000758:	f000 fb28 	bl	8000dac <_sbrk_r>
 800075c:	6038      	str	r0, [r7, #0]
 800075e:	4629      	mov	r1, r5
 8000760:	4630      	mov	r0, r6
 8000762:	f000 fb23 	bl	8000dac <_sbrk_r>
 8000766:	1c43      	adds	r3, r0, #1
 8000768:	d123      	bne.n	80007b2 <_malloc_r+0x92>
 800076a:	230c      	movs	r3, #12
 800076c:	6033      	str	r3, [r6, #0]
 800076e:	4630      	mov	r0, r6
 8000770:	f000 fd90 	bl	8001294 <__malloc_unlock>
 8000774:	e7e3      	b.n	800073e <_malloc_r+0x1e>
 8000776:	6823      	ldr	r3, [r4, #0]
 8000778:	1b5b      	subs	r3, r3, r5
 800077a:	d417      	bmi.n	80007ac <_malloc_r+0x8c>
 800077c:	2b0b      	cmp	r3, #11
 800077e:	d903      	bls.n	8000788 <_malloc_r+0x68>
 8000780:	6023      	str	r3, [r4, #0]
 8000782:	441c      	add	r4, r3
 8000784:	6025      	str	r5, [r4, #0]
 8000786:	e004      	b.n	8000792 <_malloc_r+0x72>
 8000788:	6863      	ldr	r3, [r4, #4]
 800078a:	42a2      	cmp	r2, r4
 800078c:	bf0c      	ite	eq
 800078e:	600b      	streq	r3, [r1, #0]
 8000790:	6053      	strne	r3, [r2, #4]
 8000792:	4630      	mov	r0, r6
 8000794:	f000 fd7e 	bl	8001294 <__malloc_unlock>
 8000798:	f104 000b 	add.w	r0, r4, #11
 800079c:	1d23      	adds	r3, r4, #4
 800079e:	f020 0007 	bic.w	r0, r0, #7
 80007a2:	1ac2      	subs	r2, r0, r3
 80007a4:	d0cc      	beq.n	8000740 <_malloc_r+0x20>
 80007a6:	1a1b      	subs	r3, r3, r0
 80007a8:	50a3      	str	r3, [r4, r2]
 80007aa:	e7c9      	b.n	8000740 <_malloc_r+0x20>
 80007ac:	4622      	mov	r2, r4
 80007ae:	6864      	ldr	r4, [r4, #4]
 80007b0:	e7cc      	b.n	800074c <_malloc_r+0x2c>
 80007b2:	1cc4      	adds	r4, r0, #3
 80007b4:	f024 0403 	bic.w	r4, r4, #3
 80007b8:	42a0      	cmp	r0, r4
 80007ba:	d0e3      	beq.n	8000784 <_malloc_r+0x64>
 80007bc:	1a21      	subs	r1, r4, r0
 80007be:	4630      	mov	r0, r6
 80007c0:	f000 faf4 	bl	8000dac <_sbrk_r>
 80007c4:	3001      	adds	r0, #1
 80007c6:	d1dd      	bne.n	8000784 <_malloc_r+0x64>
 80007c8:	e7cf      	b.n	800076a <_malloc_r+0x4a>
 80007ca:	bf00      	nop
 80007cc:	20000084 	.word	0x20000084
 80007d0:	20000088 	.word	0x20000088

080007d4 <__sfputc_r>:
 80007d4:	6893      	ldr	r3, [r2, #8]
 80007d6:	3b01      	subs	r3, #1
 80007d8:	2b00      	cmp	r3, #0
 80007da:	b410      	push	{r4}
 80007dc:	6093      	str	r3, [r2, #8]
 80007de:	da07      	bge.n	80007f0 <__sfputc_r+0x1c>
 80007e0:	6994      	ldr	r4, [r2, #24]
 80007e2:	42a3      	cmp	r3, r4
 80007e4:	db01      	blt.n	80007ea <__sfputc_r+0x16>
 80007e6:	290a      	cmp	r1, #10
 80007e8:	d102      	bne.n	80007f0 <__sfputc_r+0x1c>
 80007ea:	bc10      	pop	{r4}
 80007ec:	f000 bb32 	b.w	8000e54 <__swbuf_r>
 80007f0:	6813      	ldr	r3, [r2, #0]
 80007f2:	1c58      	adds	r0, r3, #1
 80007f4:	6010      	str	r0, [r2, #0]
 80007f6:	7019      	strb	r1, [r3, #0]
 80007f8:	4608      	mov	r0, r1
 80007fa:	bc10      	pop	{r4}
 80007fc:	4770      	bx	lr

080007fe <__sfputs_r>:
 80007fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000800:	4606      	mov	r6, r0
 8000802:	460f      	mov	r7, r1
 8000804:	4614      	mov	r4, r2
 8000806:	18d5      	adds	r5, r2, r3
 8000808:	42ac      	cmp	r4, r5
 800080a:	d101      	bne.n	8000810 <__sfputs_r+0x12>
 800080c:	2000      	movs	r0, #0
 800080e:	e007      	b.n	8000820 <__sfputs_r+0x22>
 8000810:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000814:	463a      	mov	r2, r7
 8000816:	4630      	mov	r0, r6
 8000818:	f7ff ffdc 	bl	80007d4 <__sfputc_r>
 800081c:	1c43      	adds	r3, r0, #1
 800081e:	d1f3      	bne.n	8000808 <__sfputs_r+0xa>
 8000820:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000824 <_vfiprintf_r>:
 8000824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000828:	460d      	mov	r5, r1
 800082a:	b09d      	sub	sp, #116	; 0x74
 800082c:	4614      	mov	r4, r2
 800082e:	4698      	mov	r8, r3
 8000830:	4606      	mov	r6, r0
 8000832:	b118      	cbz	r0, 800083c <_vfiprintf_r+0x18>
 8000834:	6983      	ldr	r3, [r0, #24]
 8000836:	b90b      	cbnz	r3, 800083c <_vfiprintf_r+0x18>
 8000838:	f7ff fed2 	bl	80005e0 <__sinit>
 800083c:	4b89      	ldr	r3, [pc, #548]	; (8000a64 <_vfiprintf_r+0x240>)
 800083e:	429d      	cmp	r5, r3
 8000840:	d11b      	bne.n	800087a <_vfiprintf_r+0x56>
 8000842:	6875      	ldr	r5, [r6, #4]
 8000844:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000846:	07d9      	lsls	r1, r3, #31
 8000848:	d405      	bmi.n	8000856 <_vfiprintf_r+0x32>
 800084a:	89ab      	ldrh	r3, [r5, #12]
 800084c:	059a      	lsls	r2, r3, #22
 800084e:	d402      	bmi.n	8000856 <_vfiprintf_r+0x32>
 8000850:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000852:	f7ff ff63 	bl	800071c <__retarget_lock_acquire_recursive>
 8000856:	89ab      	ldrh	r3, [r5, #12]
 8000858:	071b      	lsls	r3, r3, #28
 800085a:	d501      	bpl.n	8000860 <_vfiprintf_r+0x3c>
 800085c:	692b      	ldr	r3, [r5, #16]
 800085e:	b9eb      	cbnz	r3, 800089c <_vfiprintf_r+0x78>
 8000860:	4629      	mov	r1, r5
 8000862:	4630      	mov	r0, r6
 8000864:	f000 fb5a 	bl	8000f1c <__swsetup_r>
 8000868:	b1c0      	cbz	r0, 800089c <_vfiprintf_r+0x78>
 800086a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800086c:	07dc      	lsls	r4, r3, #31
 800086e:	d50e      	bpl.n	800088e <_vfiprintf_r+0x6a>
 8000870:	f04f 30ff 	mov.w	r0, #4294967295
 8000874:	b01d      	add	sp, #116	; 0x74
 8000876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800087a:	4b7b      	ldr	r3, [pc, #492]	; (8000a68 <_vfiprintf_r+0x244>)
 800087c:	429d      	cmp	r5, r3
 800087e:	d101      	bne.n	8000884 <_vfiprintf_r+0x60>
 8000880:	68b5      	ldr	r5, [r6, #8]
 8000882:	e7df      	b.n	8000844 <_vfiprintf_r+0x20>
 8000884:	4b79      	ldr	r3, [pc, #484]	; (8000a6c <_vfiprintf_r+0x248>)
 8000886:	429d      	cmp	r5, r3
 8000888:	bf08      	it	eq
 800088a:	68f5      	ldreq	r5, [r6, #12]
 800088c:	e7da      	b.n	8000844 <_vfiprintf_r+0x20>
 800088e:	89ab      	ldrh	r3, [r5, #12]
 8000890:	0598      	lsls	r0, r3, #22
 8000892:	d4ed      	bmi.n	8000870 <_vfiprintf_r+0x4c>
 8000894:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000896:	f7ff ff42 	bl	800071e <__retarget_lock_release_recursive>
 800089a:	e7e9      	b.n	8000870 <_vfiprintf_r+0x4c>
 800089c:	2300      	movs	r3, #0
 800089e:	9309      	str	r3, [sp, #36]	; 0x24
 80008a0:	2320      	movs	r3, #32
 80008a2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80008a6:	f8cd 800c 	str.w	r8, [sp, #12]
 80008aa:	2330      	movs	r3, #48	; 0x30
 80008ac:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000a70 <_vfiprintf_r+0x24c>
 80008b0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80008b4:	f04f 0901 	mov.w	r9, #1
 80008b8:	4623      	mov	r3, r4
 80008ba:	469a      	mov	sl, r3
 80008bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80008c0:	b10a      	cbz	r2, 80008c6 <_vfiprintf_r+0xa2>
 80008c2:	2a25      	cmp	r2, #37	; 0x25
 80008c4:	d1f9      	bne.n	80008ba <_vfiprintf_r+0x96>
 80008c6:	ebba 0b04 	subs.w	fp, sl, r4
 80008ca:	d00b      	beq.n	80008e4 <_vfiprintf_r+0xc0>
 80008cc:	465b      	mov	r3, fp
 80008ce:	4622      	mov	r2, r4
 80008d0:	4629      	mov	r1, r5
 80008d2:	4630      	mov	r0, r6
 80008d4:	f7ff ff93 	bl	80007fe <__sfputs_r>
 80008d8:	3001      	adds	r0, #1
 80008da:	f000 80aa 	beq.w	8000a32 <_vfiprintf_r+0x20e>
 80008de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80008e0:	445a      	add	r2, fp
 80008e2:	9209      	str	r2, [sp, #36]	; 0x24
 80008e4:	f89a 3000 	ldrb.w	r3, [sl]
 80008e8:	2b00      	cmp	r3, #0
 80008ea:	f000 80a2 	beq.w	8000a32 <_vfiprintf_r+0x20e>
 80008ee:	2300      	movs	r3, #0
 80008f0:	f04f 32ff 	mov.w	r2, #4294967295
 80008f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80008f8:	f10a 0a01 	add.w	sl, sl, #1
 80008fc:	9304      	str	r3, [sp, #16]
 80008fe:	9307      	str	r3, [sp, #28]
 8000900:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000904:	931a      	str	r3, [sp, #104]	; 0x68
 8000906:	4654      	mov	r4, sl
 8000908:	2205      	movs	r2, #5
 800090a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800090e:	4858      	ldr	r0, [pc, #352]	; (8000a70 <_vfiprintf_r+0x24c>)
 8000910:	f7ff fc66 	bl	80001e0 <memchr>
 8000914:	9a04      	ldr	r2, [sp, #16]
 8000916:	b9d8      	cbnz	r0, 8000950 <_vfiprintf_r+0x12c>
 8000918:	06d1      	lsls	r1, r2, #27
 800091a:	bf44      	itt	mi
 800091c:	2320      	movmi	r3, #32
 800091e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000922:	0713      	lsls	r3, r2, #28
 8000924:	bf44      	itt	mi
 8000926:	232b      	movmi	r3, #43	; 0x2b
 8000928:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800092c:	f89a 3000 	ldrb.w	r3, [sl]
 8000930:	2b2a      	cmp	r3, #42	; 0x2a
 8000932:	d015      	beq.n	8000960 <_vfiprintf_r+0x13c>
 8000934:	9a07      	ldr	r2, [sp, #28]
 8000936:	4654      	mov	r4, sl
 8000938:	2000      	movs	r0, #0
 800093a:	f04f 0c0a 	mov.w	ip, #10
 800093e:	4621      	mov	r1, r4
 8000940:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000944:	3b30      	subs	r3, #48	; 0x30
 8000946:	2b09      	cmp	r3, #9
 8000948:	d94e      	bls.n	80009e8 <_vfiprintf_r+0x1c4>
 800094a:	b1b0      	cbz	r0, 800097a <_vfiprintf_r+0x156>
 800094c:	9207      	str	r2, [sp, #28]
 800094e:	e014      	b.n	800097a <_vfiprintf_r+0x156>
 8000950:	eba0 0308 	sub.w	r3, r0, r8
 8000954:	fa09 f303 	lsl.w	r3, r9, r3
 8000958:	4313      	orrs	r3, r2
 800095a:	9304      	str	r3, [sp, #16]
 800095c:	46a2      	mov	sl, r4
 800095e:	e7d2      	b.n	8000906 <_vfiprintf_r+0xe2>
 8000960:	9b03      	ldr	r3, [sp, #12]
 8000962:	1d19      	adds	r1, r3, #4
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	9103      	str	r1, [sp, #12]
 8000968:	2b00      	cmp	r3, #0
 800096a:	bfbb      	ittet	lt
 800096c:	425b      	neglt	r3, r3
 800096e:	f042 0202 	orrlt.w	r2, r2, #2
 8000972:	9307      	strge	r3, [sp, #28]
 8000974:	9307      	strlt	r3, [sp, #28]
 8000976:	bfb8      	it	lt
 8000978:	9204      	strlt	r2, [sp, #16]
 800097a:	7823      	ldrb	r3, [r4, #0]
 800097c:	2b2e      	cmp	r3, #46	; 0x2e
 800097e:	d10c      	bne.n	800099a <_vfiprintf_r+0x176>
 8000980:	7863      	ldrb	r3, [r4, #1]
 8000982:	2b2a      	cmp	r3, #42	; 0x2a
 8000984:	d135      	bne.n	80009f2 <_vfiprintf_r+0x1ce>
 8000986:	9b03      	ldr	r3, [sp, #12]
 8000988:	1d1a      	adds	r2, r3, #4
 800098a:	681b      	ldr	r3, [r3, #0]
 800098c:	9203      	str	r2, [sp, #12]
 800098e:	2b00      	cmp	r3, #0
 8000990:	bfb8      	it	lt
 8000992:	f04f 33ff 	movlt.w	r3, #4294967295
 8000996:	3402      	adds	r4, #2
 8000998:	9305      	str	r3, [sp, #20]
 800099a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000a80 <_vfiprintf_r+0x25c>
 800099e:	7821      	ldrb	r1, [r4, #0]
 80009a0:	2203      	movs	r2, #3
 80009a2:	4650      	mov	r0, sl
 80009a4:	f7ff fc1c 	bl	80001e0 <memchr>
 80009a8:	b140      	cbz	r0, 80009bc <_vfiprintf_r+0x198>
 80009aa:	2340      	movs	r3, #64	; 0x40
 80009ac:	eba0 000a 	sub.w	r0, r0, sl
 80009b0:	fa03 f000 	lsl.w	r0, r3, r0
 80009b4:	9b04      	ldr	r3, [sp, #16]
 80009b6:	4303      	orrs	r3, r0
 80009b8:	3401      	adds	r4, #1
 80009ba:	9304      	str	r3, [sp, #16]
 80009bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009c0:	482c      	ldr	r0, [pc, #176]	; (8000a74 <_vfiprintf_r+0x250>)
 80009c2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80009c6:	2206      	movs	r2, #6
 80009c8:	f7ff fc0a 	bl	80001e0 <memchr>
 80009cc:	2800      	cmp	r0, #0
 80009ce:	d03f      	beq.n	8000a50 <_vfiprintf_r+0x22c>
 80009d0:	4b29      	ldr	r3, [pc, #164]	; (8000a78 <_vfiprintf_r+0x254>)
 80009d2:	bb1b      	cbnz	r3, 8000a1c <_vfiprintf_r+0x1f8>
 80009d4:	9b03      	ldr	r3, [sp, #12]
 80009d6:	3307      	adds	r3, #7
 80009d8:	f023 0307 	bic.w	r3, r3, #7
 80009dc:	3308      	adds	r3, #8
 80009de:	9303      	str	r3, [sp, #12]
 80009e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80009e2:	443b      	add	r3, r7
 80009e4:	9309      	str	r3, [sp, #36]	; 0x24
 80009e6:	e767      	b.n	80008b8 <_vfiprintf_r+0x94>
 80009e8:	fb0c 3202 	mla	r2, ip, r2, r3
 80009ec:	460c      	mov	r4, r1
 80009ee:	2001      	movs	r0, #1
 80009f0:	e7a5      	b.n	800093e <_vfiprintf_r+0x11a>
 80009f2:	2300      	movs	r3, #0
 80009f4:	3401      	adds	r4, #1
 80009f6:	9305      	str	r3, [sp, #20]
 80009f8:	4619      	mov	r1, r3
 80009fa:	f04f 0c0a 	mov.w	ip, #10
 80009fe:	4620      	mov	r0, r4
 8000a00:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a04:	3a30      	subs	r2, #48	; 0x30
 8000a06:	2a09      	cmp	r2, #9
 8000a08:	d903      	bls.n	8000a12 <_vfiprintf_r+0x1ee>
 8000a0a:	2b00      	cmp	r3, #0
 8000a0c:	d0c5      	beq.n	800099a <_vfiprintf_r+0x176>
 8000a0e:	9105      	str	r1, [sp, #20]
 8000a10:	e7c3      	b.n	800099a <_vfiprintf_r+0x176>
 8000a12:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a16:	4604      	mov	r4, r0
 8000a18:	2301      	movs	r3, #1
 8000a1a:	e7f0      	b.n	80009fe <_vfiprintf_r+0x1da>
 8000a1c:	ab03      	add	r3, sp, #12
 8000a1e:	9300      	str	r3, [sp, #0]
 8000a20:	462a      	mov	r2, r5
 8000a22:	4b16      	ldr	r3, [pc, #88]	; (8000a7c <_vfiprintf_r+0x258>)
 8000a24:	a904      	add	r1, sp, #16
 8000a26:	4630      	mov	r0, r6
 8000a28:	f3af 8000 	nop.w
 8000a2c:	4607      	mov	r7, r0
 8000a2e:	1c78      	adds	r0, r7, #1
 8000a30:	d1d6      	bne.n	80009e0 <_vfiprintf_r+0x1bc>
 8000a32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a34:	07d9      	lsls	r1, r3, #31
 8000a36:	d405      	bmi.n	8000a44 <_vfiprintf_r+0x220>
 8000a38:	89ab      	ldrh	r3, [r5, #12]
 8000a3a:	059a      	lsls	r2, r3, #22
 8000a3c:	d402      	bmi.n	8000a44 <_vfiprintf_r+0x220>
 8000a3e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a40:	f7ff fe6d 	bl	800071e <__retarget_lock_release_recursive>
 8000a44:	89ab      	ldrh	r3, [r5, #12]
 8000a46:	065b      	lsls	r3, r3, #25
 8000a48:	f53f af12 	bmi.w	8000870 <_vfiprintf_r+0x4c>
 8000a4c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000a4e:	e711      	b.n	8000874 <_vfiprintf_r+0x50>
 8000a50:	ab03      	add	r3, sp, #12
 8000a52:	9300      	str	r3, [sp, #0]
 8000a54:	462a      	mov	r2, r5
 8000a56:	4b09      	ldr	r3, [pc, #36]	; (8000a7c <_vfiprintf_r+0x258>)
 8000a58:	a904      	add	r1, sp, #16
 8000a5a:	4630      	mov	r0, r6
 8000a5c:	f000 f880 	bl	8000b60 <_printf_i>
 8000a60:	e7e4      	b.n	8000a2c <_vfiprintf_r+0x208>
 8000a62:	bf00      	nop
 8000a64:	080013f4 	.word	0x080013f4
 8000a68:	08001414 	.word	0x08001414
 8000a6c:	080013d4 	.word	0x080013d4
 8000a70:	08001434 	.word	0x08001434
 8000a74:	0800143e 	.word	0x0800143e
 8000a78:	00000000 	.word	0x00000000
 8000a7c:	080007ff 	.word	0x080007ff
 8000a80:	0800143a 	.word	0x0800143a

08000a84 <_printf_common>:
 8000a84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a88:	4616      	mov	r6, r2
 8000a8a:	4699      	mov	r9, r3
 8000a8c:	688a      	ldr	r2, [r1, #8]
 8000a8e:	690b      	ldr	r3, [r1, #16]
 8000a90:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000a94:	4293      	cmp	r3, r2
 8000a96:	bfb8      	it	lt
 8000a98:	4613      	movlt	r3, r2
 8000a9a:	6033      	str	r3, [r6, #0]
 8000a9c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000aa0:	4607      	mov	r7, r0
 8000aa2:	460c      	mov	r4, r1
 8000aa4:	b10a      	cbz	r2, 8000aaa <_printf_common+0x26>
 8000aa6:	3301      	adds	r3, #1
 8000aa8:	6033      	str	r3, [r6, #0]
 8000aaa:	6823      	ldr	r3, [r4, #0]
 8000aac:	0699      	lsls	r1, r3, #26
 8000aae:	bf42      	ittt	mi
 8000ab0:	6833      	ldrmi	r3, [r6, #0]
 8000ab2:	3302      	addmi	r3, #2
 8000ab4:	6033      	strmi	r3, [r6, #0]
 8000ab6:	6825      	ldr	r5, [r4, #0]
 8000ab8:	f015 0506 	ands.w	r5, r5, #6
 8000abc:	d106      	bne.n	8000acc <_printf_common+0x48>
 8000abe:	f104 0a19 	add.w	sl, r4, #25
 8000ac2:	68e3      	ldr	r3, [r4, #12]
 8000ac4:	6832      	ldr	r2, [r6, #0]
 8000ac6:	1a9b      	subs	r3, r3, r2
 8000ac8:	42ab      	cmp	r3, r5
 8000aca:	dc26      	bgt.n	8000b1a <_printf_common+0x96>
 8000acc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ad0:	1e13      	subs	r3, r2, #0
 8000ad2:	6822      	ldr	r2, [r4, #0]
 8000ad4:	bf18      	it	ne
 8000ad6:	2301      	movne	r3, #1
 8000ad8:	0692      	lsls	r2, r2, #26
 8000ada:	d42b      	bmi.n	8000b34 <_printf_common+0xb0>
 8000adc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000ae0:	4649      	mov	r1, r9
 8000ae2:	4638      	mov	r0, r7
 8000ae4:	47c0      	blx	r8
 8000ae6:	3001      	adds	r0, #1
 8000ae8:	d01e      	beq.n	8000b28 <_printf_common+0xa4>
 8000aea:	6823      	ldr	r3, [r4, #0]
 8000aec:	68e5      	ldr	r5, [r4, #12]
 8000aee:	6832      	ldr	r2, [r6, #0]
 8000af0:	f003 0306 	and.w	r3, r3, #6
 8000af4:	2b04      	cmp	r3, #4
 8000af6:	bf08      	it	eq
 8000af8:	1aad      	subeq	r5, r5, r2
 8000afa:	68a3      	ldr	r3, [r4, #8]
 8000afc:	6922      	ldr	r2, [r4, #16]
 8000afe:	bf0c      	ite	eq
 8000b00:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b04:	2500      	movne	r5, #0
 8000b06:	4293      	cmp	r3, r2
 8000b08:	bfc4      	itt	gt
 8000b0a:	1a9b      	subgt	r3, r3, r2
 8000b0c:	18ed      	addgt	r5, r5, r3
 8000b0e:	2600      	movs	r6, #0
 8000b10:	341a      	adds	r4, #26
 8000b12:	42b5      	cmp	r5, r6
 8000b14:	d11a      	bne.n	8000b4c <_printf_common+0xc8>
 8000b16:	2000      	movs	r0, #0
 8000b18:	e008      	b.n	8000b2c <_printf_common+0xa8>
 8000b1a:	2301      	movs	r3, #1
 8000b1c:	4652      	mov	r2, sl
 8000b1e:	4649      	mov	r1, r9
 8000b20:	4638      	mov	r0, r7
 8000b22:	47c0      	blx	r8
 8000b24:	3001      	adds	r0, #1
 8000b26:	d103      	bne.n	8000b30 <_printf_common+0xac>
 8000b28:	f04f 30ff 	mov.w	r0, #4294967295
 8000b2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b30:	3501      	adds	r5, #1
 8000b32:	e7c6      	b.n	8000ac2 <_printf_common+0x3e>
 8000b34:	18e1      	adds	r1, r4, r3
 8000b36:	1c5a      	adds	r2, r3, #1
 8000b38:	2030      	movs	r0, #48	; 0x30
 8000b3a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000b3e:	4422      	add	r2, r4
 8000b40:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000b44:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000b48:	3302      	adds	r3, #2
 8000b4a:	e7c7      	b.n	8000adc <_printf_common+0x58>
 8000b4c:	2301      	movs	r3, #1
 8000b4e:	4622      	mov	r2, r4
 8000b50:	4649      	mov	r1, r9
 8000b52:	4638      	mov	r0, r7
 8000b54:	47c0      	blx	r8
 8000b56:	3001      	adds	r0, #1
 8000b58:	d0e6      	beq.n	8000b28 <_printf_common+0xa4>
 8000b5a:	3601      	adds	r6, #1
 8000b5c:	e7d9      	b.n	8000b12 <_printf_common+0x8e>
	...

08000b60 <_printf_i>:
 8000b60:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000b64:	460c      	mov	r4, r1
 8000b66:	4691      	mov	r9, r2
 8000b68:	7e27      	ldrb	r7, [r4, #24]
 8000b6a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000b6c:	2f78      	cmp	r7, #120	; 0x78
 8000b6e:	4680      	mov	r8, r0
 8000b70:	469a      	mov	sl, r3
 8000b72:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b76:	d807      	bhi.n	8000b88 <_printf_i+0x28>
 8000b78:	2f62      	cmp	r7, #98	; 0x62
 8000b7a:	d80a      	bhi.n	8000b92 <_printf_i+0x32>
 8000b7c:	2f00      	cmp	r7, #0
 8000b7e:	f000 80d8 	beq.w	8000d32 <_printf_i+0x1d2>
 8000b82:	2f58      	cmp	r7, #88	; 0x58
 8000b84:	f000 80a3 	beq.w	8000cce <_printf_i+0x16e>
 8000b88:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000b8c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000b90:	e03a      	b.n	8000c08 <_printf_i+0xa8>
 8000b92:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000b96:	2b15      	cmp	r3, #21
 8000b98:	d8f6      	bhi.n	8000b88 <_printf_i+0x28>
 8000b9a:	a001      	add	r0, pc, #4	; (adr r0, 8000ba0 <_printf_i+0x40>)
 8000b9c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000ba0:	08000bf9 	.word	0x08000bf9
 8000ba4:	08000c0d 	.word	0x08000c0d
 8000ba8:	08000b89 	.word	0x08000b89
 8000bac:	08000b89 	.word	0x08000b89
 8000bb0:	08000b89 	.word	0x08000b89
 8000bb4:	08000b89 	.word	0x08000b89
 8000bb8:	08000c0d 	.word	0x08000c0d
 8000bbc:	08000b89 	.word	0x08000b89
 8000bc0:	08000b89 	.word	0x08000b89
 8000bc4:	08000b89 	.word	0x08000b89
 8000bc8:	08000b89 	.word	0x08000b89
 8000bcc:	08000d19 	.word	0x08000d19
 8000bd0:	08000c3d 	.word	0x08000c3d
 8000bd4:	08000cfb 	.word	0x08000cfb
 8000bd8:	08000b89 	.word	0x08000b89
 8000bdc:	08000b89 	.word	0x08000b89
 8000be0:	08000d3b 	.word	0x08000d3b
 8000be4:	08000b89 	.word	0x08000b89
 8000be8:	08000c3d 	.word	0x08000c3d
 8000bec:	08000b89 	.word	0x08000b89
 8000bf0:	08000b89 	.word	0x08000b89
 8000bf4:	08000d03 	.word	0x08000d03
 8000bf8:	680b      	ldr	r3, [r1, #0]
 8000bfa:	1d1a      	adds	r2, r3, #4
 8000bfc:	681b      	ldr	r3, [r3, #0]
 8000bfe:	600a      	str	r2, [r1, #0]
 8000c00:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000c04:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c08:	2301      	movs	r3, #1
 8000c0a:	e0a3      	b.n	8000d54 <_printf_i+0x1f4>
 8000c0c:	6825      	ldr	r5, [r4, #0]
 8000c0e:	6808      	ldr	r0, [r1, #0]
 8000c10:	062e      	lsls	r6, r5, #24
 8000c12:	f100 0304 	add.w	r3, r0, #4
 8000c16:	d50a      	bpl.n	8000c2e <_printf_i+0xce>
 8000c18:	6805      	ldr	r5, [r0, #0]
 8000c1a:	600b      	str	r3, [r1, #0]
 8000c1c:	2d00      	cmp	r5, #0
 8000c1e:	da03      	bge.n	8000c28 <_printf_i+0xc8>
 8000c20:	232d      	movs	r3, #45	; 0x2d
 8000c22:	426d      	negs	r5, r5
 8000c24:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000c28:	485e      	ldr	r0, [pc, #376]	; (8000da4 <_printf_i+0x244>)
 8000c2a:	230a      	movs	r3, #10
 8000c2c:	e019      	b.n	8000c62 <_printf_i+0x102>
 8000c2e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000c32:	6805      	ldr	r5, [r0, #0]
 8000c34:	600b      	str	r3, [r1, #0]
 8000c36:	bf18      	it	ne
 8000c38:	b22d      	sxthne	r5, r5
 8000c3a:	e7ef      	b.n	8000c1c <_printf_i+0xbc>
 8000c3c:	680b      	ldr	r3, [r1, #0]
 8000c3e:	6825      	ldr	r5, [r4, #0]
 8000c40:	1d18      	adds	r0, r3, #4
 8000c42:	6008      	str	r0, [r1, #0]
 8000c44:	0628      	lsls	r0, r5, #24
 8000c46:	d501      	bpl.n	8000c4c <_printf_i+0xec>
 8000c48:	681d      	ldr	r5, [r3, #0]
 8000c4a:	e002      	b.n	8000c52 <_printf_i+0xf2>
 8000c4c:	0669      	lsls	r1, r5, #25
 8000c4e:	d5fb      	bpl.n	8000c48 <_printf_i+0xe8>
 8000c50:	881d      	ldrh	r5, [r3, #0]
 8000c52:	4854      	ldr	r0, [pc, #336]	; (8000da4 <_printf_i+0x244>)
 8000c54:	2f6f      	cmp	r7, #111	; 0x6f
 8000c56:	bf0c      	ite	eq
 8000c58:	2308      	moveq	r3, #8
 8000c5a:	230a      	movne	r3, #10
 8000c5c:	2100      	movs	r1, #0
 8000c5e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000c62:	6866      	ldr	r6, [r4, #4]
 8000c64:	60a6      	str	r6, [r4, #8]
 8000c66:	2e00      	cmp	r6, #0
 8000c68:	bfa2      	ittt	ge
 8000c6a:	6821      	ldrge	r1, [r4, #0]
 8000c6c:	f021 0104 	bicge.w	r1, r1, #4
 8000c70:	6021      	strge	r1, [r4, #0]
 8000c72:	b90d      	cbnz	r5, 8000c78 <_printf_i+0x118>
 8000c74:	2e00      	cmp	r6, #0
 8000c76:	d04d      	beq.n	8000d14 <_printf_i+0x1b4>
 8000c78:	4616      	mov	r6, r2
 8000c7a:	fbb5 f1f3 	udiv	r1, r5, r3
 8000c7e:	fb03 5711 	mls	r7, r3, r1, r5
 8000c82:	5dc7      	ldrb	r7, [r0, r7]
 8000c84:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000c88:	462f      	mov	r7, r5
 8000c8a:	42bb      	cmp	r3, r7
 8000c8c:	460d      	mov	r5, r1
 8000c8e:	d9f4      	bls.n	8000c7a <_printf_i+0x11a>
 8000c90:	2b08      	cmp	r3, #8
 8000c92:	d10b      	bne.n	8000cac <_printf_i+0x14c>
 8000c94:	6823      	ldr	r3, [r4, #0]
 8000c96:	07df      	lsls	r7, r3, #31
 8000c98:	d508      	bpl.n	8000cac <_printf_i+0x14c>
 8000c9a:	6923      	ldr	r3, [r4, #16]
 8000c9c:	6861      	ldr	r1, [r4, #4]
 8000c9e:	4299      	cmp	r1, r3
 8000ca0:	bfde      	ittt	le
 8000ca2:	2330      	movle	r3, #48	; 0x30
 8000ca4:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000ca8:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000cac:	1b92      	subs	r2, r2, r6
 8000cae:	6122      	str	r2, [r4, #16]
 8000cb0:	f8cd a000 	str.w	sl, [sp]
 8000cb4:	464b      	mov	r3, r9
 8000cb6:	aa03      	add	r2, sp, #12
 8000cb8:	4621      	mov	r1, r4
 8000cba:	4640      	mov	r0, r8
 8000cbc:	f7ff fee2 	bl	8000a84 <_printf_common>
 8000cc0:	3001      	adds	r0, #1
 8000cc2:	d14c      	bne.n	8000d5e <_printf_i+0x1fe>
 8000cc4:	f04f 30ff 	mov.w	r0, #4294967295
 8000cc8:	b004      	add	sp, #16
 8000cca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cce:	4835      	ldr	r0, [pc, #212]	; (8000da4 <_printf_i+0x244>)
 8000cd0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000cd4:	6823      	ldr	r3, [r4, #0]
 8000cd6:	680e      	ldr	r6, [r1, #0]
 8000cd8:	061f      	lsls	r7, r3, #24
 8000cda:	f856 5b04 	ldr.w	r5, [r6], #4
 8000cde:	600e      	str	r6, [r1, #0]
 8000ce0:	d514      	bpl.n	8000d0c <_printf_i+0x1ac>
 8000ce2:	07d9      	lsls	r1, r3, #31
 8000ce4:	bf44      	itt	mi
 8000ce6:	f043 0320 	orrmi.w	r3, r3, #32
 8000cea:	6023      	strmi	r3, [r4, #0]
 8000cec:	b91d      	cbnz	r5, 8000cf6 <_printf_i+0x196>
 8000cee:	6823      	ldr	r3, [r4, #0]
 8000cf0:	f023 0320 	bic.w	r3, r3, #32
 8000cf4:	6023      	str	r3, [r4, #0]
 8000cf6:	2310      	movs	r3, #16
 8000cf8:	e7b0      	b.n	8000c5c <_printf_i+0xfc>
 8000cfa:	6823      	ldr	r3, [r4, #0]
 8000cfc:	f043 0320 	orr.w	r3, r3, #32
 8000d00:	6023      	str	r3, [r4, #0]
 8000d02:	2378      	movs	r3, #120	; 0x78
 8000d04:	4828      	ldr	r0, [pc, #160]	; (8000da8 <_printf_i+0x248>)
 8000d06:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d0a:	e7e3      	b.n	8000cd4 <_printf_i+0x174>
 8000d0c:	065e      	lsls	r6, r3, #25
 8000d0e:	bf48      	it	mi
 8000d10:	b2ad      	uxthmi	r5, r5
 8000d12:	e7e6      	b.n	8000ce2 <_printf_i+0x182>
 8000d14:	4616      	mov	r6, r2
 8000d16:	e7bb      	b.n	8000c90 <_printf_i+0x130>
 8000d18:	680b      	ldr	r3, [r1, #0]
 8000d1a:	6826      	ldr	r6, [r4, #0]
 8000d1c:	6960      	ldr	r0, [r4, #20]
 8000d1e:	1d1d      	adds	r5, r3, #4
 8000d20:	600d      	str	r5, [r1, #0]
 8000d22:	0635      	lsls	r5, r6, #24
 8000d24:	681b      	ldr	r3, [r3, #0]
 8000d26:	d501      	bpl.n	8000d2c <_printf_i+0x1cc>
 8000d28:	6018      	str	r0, [r3, #0]
 8000d2a:	e002      	b.n	8000d32 <_printf_i+0x1d2>
 8000d2c:	0671      	lsls	r1, r6, #25
 8000d2e:	d5fb      	bpl.n	8000d28 <_printf_i+0x1c8>
 8000d30:	8018      	strh	r0, [r3, #0]
 8000d32:	2300      	movs	r3, #0
 8000d34:	6123      	str	r3, [r4, #16]
 8000d36:	4616      	mov	r6, r2
 8000d38:	e7ba      	b.n	8000cb0 <_printf_i+0x150>
 8000d3a:	680b      	ldr	r3, [r1, #0]
 8000d3c:	1d1a      	adds	r2, r3, #4
 8000d3e:	600a      	str	r2, [r1, #0]
 8000d40:	681e      	ldr	r6, [r3, #0]
 8000d42:	6862      	ldr	r2, [r4, #4]
 8000d44:	2100      	movs	r1, #0
 8000d46:	4630      	mov	r0, r6
 8000d48:	f7ff fa4a 	bl	80001e0 <memchr>
 8000d4c:	b108      	cbz	r0, 8000d52 <_printf_i+0x1f2>
 8000d4e:	1b80      	subs	r0, r0, r6
 8000d50:	6060      	str	r0, [r4, #4]
 8000d52:	6863      	ldr	r3, [r4, #4]
 8000d54:	6123      	str	r3, [r4, #16]
 8000d56:	2300      	movs	r3, #0
 8000d58:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d5c:	e7a8      	b.n	8000cb0 <_printf_i+0x150>
 8000d5e:	6923      	ldr	r3, [r4, #16]
 8000d60:	4632      	mov	r2, r6
 8000d62:	4649      	mov	r1, r9
 8000d64:	4640      	mov	r0, r8
 8000d66:	47d0      	blx	sl
 8000d68:	3001      	adds	r0, #1
 8000d6a:	d0ab      	beq.n	8000cc4 <_printf_i+0x164>
 8000d6c:	6823      	ldr	r3, [r4, #0]
 8000d6e:	079b      	lsls	r3, r3, #30
 8000d70:	d413      	bmi.n	8000d9a <_printf_i+0x23a>
 8000d72:	68e0      	ldr	r0, [r4, #12]
 8000d74:	9b03      	ldr	r3, [sp, #12]
 8000d76:	4298      	cmp	r0, r3
 8000d78:	bfb8      	it	lt
 8000d7a:	4618      	movlt	r0, r3
 8000d7c:	e7a4      	b.n	8000cc8 <_printf_i+0x168>
 8000d7e:	2301      	movs	r3, #1
 8000d80:	4632      	mov	r2, r6
 8000d82:	4649      	mov	r1, r9
 8000d84:	4640      	mov	r0, r8
 8000d86:	47d0      	blx	sl
 8000d88:	3001      	adds	r0, #1
 8000d8a:	d09b      	beq.n	8000cc4 <_printf_i+0x164>
 8000d8c:	3501      	adds	r5, #1
 8000d8e:	68e3      	ldr	r3, [r4, #12]
 8000d90:	9903      	ldr	r1, [sp, #12]
 8000d92:	1a5b      	subs	r3, r3, r1
 8000d94:	42ab      	cmp	r3, r5
 8000d96:	dcf2      	bgt.n	8000d7e <_printf_i+0x21e>
 8000d98:	e7eb      	b.n	8000d72 <_printf_i+0x212>
 8000d9a:	2500      	movs	r5, #0
 8000d9c:	f104 0619 	add.w	r6, r4, #25
 8000da0:	e7f5      	b.n	8000d8e <_printf_i+0x22e>
 8000da2:	bf00      	nop
 8000da4:	08001445 	.word	0x08001445
 8000da8:	08001456 	.word	0x08001456

08000dac <_sbrk_r>:
 8000dac:	b538      	push	{r3, r4, r5, lr}
 8000dae:	4d06      	ldr	r5, [pc, #24]	; (8000dc8 <_sbrk_r+0x1c>)
 8000db0:	2300      	movs	r3, #0
 8000db2:	4604      	mov	r4, r0
 8000db4:	4608      	mov	r0, r1
 8000db6:	602b      	str	r3, [r5, #0]
 8000db8:	f7ff fb10 	bl	80003dc <_sbrk>
 8000dbc:	1c43      	adds	r3, r0, #1
 8000dbe:	d102      	bne.n	8000dc6 <_sbrk_r+0x1a>
 8000dc0:	682b      	ldr	r3, [r5, #0]
 8000dc2:	b103      	cbz	r3, 8000dc6 <_sbrk_r+0x1a>
 8000dc4:	6023      	str	r3, [r4, #0]
 8000dc6:	bd38      	pop	{r3, r4, r5, pc}
 8000dc8:	20000098 	.word	0x20000098

08000dcc <__sread>:
 8000dcc:	b510      	push	{r4, lr}
 8000dce:	460c      	mov	r4, r1
 8000dd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dd4:	f000 fab2 	bl	800133c <_read_r>
 8000dd8:	2800      	cmp	r0, #0
 8000dda:	bfab      	itete	ge
 8000ddc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000dde:	89a3      	ldrhlt	r3, [r4, #12]
 8000de0:	181b      	addge	r3, r3, r0
 8000de2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000de6:	bfac      	ite	ge
 8000de8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000dea:	81a3      	strhlt	r3, [r4, #12]
 8000dec:	bd10      	pop	{r4, pc}

08000dee <__swrite>:
 8000dee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000df2:	461f      	mov	r7, r3
 8000df4:	898b      	ldrh	r3, [r1, #12]
 8000df6:	05db      	lsls	r3, r3, #23
 8000df8:	4605      	mov	r5, r0
 8000dfa:	460c      	mov	r4, r1
 8000dfc:	4616      	mov	r6, r2
 8000dfe:	d505      	bpl.n	8000e0c <__swrite+0x1e>
 8000e00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e04:	2302      	movs	r3, #2
 8000e06:	2200      	movs	r2, #0
 8000e08:	f000 f9c8 	bl	800119c <_lseek_r>
 8000e0c:	89a3      	ldrh	r3, [r4, #12]
 8000e0e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e12:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e16:	81a3      	strh	r3, [r4, #12]
 8000e18:	4632      	mov	r2, r6
 8000e1a:	463b      	mov	r3, r7
 8000e1c:	4628      	mov	r0, r5
 8000e1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e22:	f000 b869 	b.w	8000ef8 <_write_r>

08000e26 <__sseek>:
 8000e26:	b510      	push	{r4, lr}
 8000e28:	460c      	mov	r4, r1
 8000e2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e2e:	f000 f9b5 	bl	800119c <_lseek_r>
 8000e32:	1c43      	adds	r3, r0, #1
 8000e34:	89a3      	ldrh	r3, [r4, #12]
 8000e36:	bf15      	itete	ne
 8000e38:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e3a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e3e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e42:	81a3      	strheq	r3, [r4, #12]
 8000e44:	bf18      	it	ne
 8000e46:	81a3      	strhne	r3, [r4, #12]
 8000e48:	bd10      	pop	{r4, pc}

08000e4a <__sclose>:
 8000e4a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e4e:	f000 b8d3 	b.w	8000ff8 <_close_r>
	...

08000e54 <__swbuf_r>:
 8000e54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e56:	460e      	mov	r6, r1
 8000e58:	4614      	mov	r4, r2
 8000e5a:	4605      	mov	r5, r0
 8000e5c:	b118      	cbz	r0, 8000e66 <__swbuf_r+0x12>
 8000e5e:	6983      	ldr	r3, [r0, #24]
 8000e60:	b90b      	cbnz	r3, 8000e66 <__swbuf_r+0x12>
 8000e62:	f7ff fbbd 	bl	80005e0 <__sinit>
 8000e66:	4b21      	ldr	r3, [pc, #132]	; (8000eec <__swbuf_r+0x98>)
 8000e68:	429c      	cmp	r4, r3
 8000e6a:	d12b      	bne.n	8000ec4 <__swbuf_r+0x70>
 8000e6c:	686c      	ldr	r4, [r5, #4]
 8000e6e:	69a3      	ldr	r3, [r4, #24]
 8000e70:	60a3      	str	r3, [r4, #8]
 8000e72:	89a3      	ldrh	r3, [r4, #12]
 8000e74:	071a      	lsls	r2, r3, #28
 8000e76:	d52f      	bpl.n	8000ed8 <__swbuf_r+0x84>
 8000e78:	6923      	ldr	r3, [r4, #16]
 8000e7a:	b36b      	cbz	r3, 8000ed8 <__swbuf_r+0x84>
 8000e7c:	6923      	ldr	r3, [r4, #16]
 8000e7e:	6820      	ldr	r0, [r4, #0]
 8000e80:	1ac0      	subs	r0, r0, r3
 8000e82:	6963      	ldr	r3, [r4, #20]
 8000e84:	b2f6      	uxtb	r6, r6
 8000e86:	4283      	cmp	r3, r0
 8000e88:	4637      	mov	r7, r6
 8000e8a:	dc04      	bgt.n	8000e96 <__swbuf_r+0x42>
 8000e8c:	4621      	mov	r1, r4
 8000e8e:	4628      	mov	r0, r5
 8000e90:	f000 f948 	bl	8001124 <_fflush_r>
 8000e94:	bb30      	cbnz	r0, 8000ee4 <__swbuf_r+0x90>
 8000e96:	68a3      	ldr	r3, [r4, #8]
 8000e98:	3b01      	subs	r3, #1
 8000e9a:	60a3      	str	r3, [r4, #8]
 8000e9c:	6823      	ldr	r3, [r4, #0]
 8000e9e:	1c5a      	adds	r2, r3, #1
 8000ea0:	6022      	str	r2, [r4, #0]
 8000ea2:	701e      	strb	r6, [r3, #0]
 8000ea4:	6963      	ldr	r3, [r4, #20]
 8000ea6:	3001      	adds	r0, #1
 8000ea8:	4283      	cmp	r3, r0
 8000eaa:	d004      	beq.n	8000eb6 <__swbuf_r+0x62>
 8000eac:	89a3      	ldrh	r3, [r4, #12]
 8000eae:	07db      	lsls	r3, r3, #31
 8000eb0:	d506      	bpl.n	8000ec0 <__swbuf_r+0x6c>
 8000eb2:	2e0a      	cmp	r6, #10
 8000eb4:	d104      	bne.n	8000ec0 <__swbuf_r+0x6c>
 8000eb6:	4621      	mov	r1, r4
 8000eb8:	4628      	mov	r0, r5
 8000eba:	f000 f933 	bl	8001124 <_fflush_r>
 8000ebe:	b988      	cbnz	r0, 8000ee4 <__swbuf_r+0x90>
 8000ec0:	4638      	mov	r0, r7
 8000ec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ec4:	4b0a      	ldr	r3, [pc, #40]	; (8000ef0 <__swbuf_r+0x9c>)
 8000ec6:	429c      	cmp	r4, r3
 8000ec8:	d101      	bne.n	8000ece <__swbuf_r+0x7a>
 8000eca:	68ac      	ldr	r4, [r5, #8]
 8000ecc:	e7cf      	b.n	8000e6e <__swbuf_r+0x1a>
 8000ece:	4b09      	ldr	r3, [pc, #36]	; (8000ef4 <__swbuf_r+0xa0>)
 8000ed0:	429c      	cmp	r4, r3
 8000ed2:	bf08      	it	eq
 8000ed4:	68ec      	ldreq	r4, [r5, #12]
 8000ed6:	e7ca      	b.n	8000e6e <__swbuf_r+0x1a>
 8000ed8:	4621      	mov	r1, r4
 8000eda:	4628      	mov	r0, r5
 8000edc:	f000 f81e 	bl	8000f1c <__swsetup_r>
 8000ee0:	2800      	cmp	r0, #0
 8000ee2:	d0cb      	beq.n	8000e7c <__swbuf_r+0x28>
 8000ee4:	f04f 37ff 	mov.w	r7, #4294967295
 8000ee8:	e7ea      	b.n	8000ec0 <__swbuf_r+0x6c>
 8000eea:	bf00      	nop
 8000eec:	080013f4 	.word	0x080013f4
 8000ef0:	08001414 	.word	0x08001414
 8000ef4:	080013d4 	.word	0x080013d4

08000ef8 <_write_r>:
 8000ef8:	b538      	push	{r3, r4, r5, lr}
 8000efa:	4d07      	ldr	r5, [pc, #28]	; (8000f18 <_write_r+0x20>)
 8000efc:	4604      	mov	r4, r0
 8000efe:	4608      	mov	r0, r1
 8000f00:	4611      	mov	r1, r2
 8000f02:	2200      	movs	r2, #0
 8000f04:	602a      	str	r2, [r5, #0]
 8000f06:	461a      	mov	r2, r3
 8000f08:	f7ff fa1b 	bl	8000342 <_write>
 8000f0c:	1c43      	adds	r3, r0, #1
 8000f0e:	d102      	bne.n	8000f16 <_write_r+0x1e>
 8000f10:	682b      	ldr	r3, [r5, #0]
 8000f12:	b103      	cbz	r3, 8000f16 <_write_r+0x1e>
 8000f14:	6023      	str	r3, [r4, #0]
 8000f16:	bd38      	pop	{r3, r4, r5, pc}
 8000f18:	20000098 	.word	0x20000098

08000f1c <__swsetup_r>:
 8000f1c:	4b32      	ldr	r3, [pc, #200]	; (8000fe8 <__swsetup_r+0xcc>)
 8000f1e:	b570      	push	{r4, r5, r6, lr}
 8000f20:	681d      	ldr	r5, [r3, #0]
 8000f22:	4606      	mov	r6, r0
 8000f24:	460c      	mov	r4, r1
 8000f26:	b125      	cbz	r5, 8000f32 <__swsetup_r+0x16>
 8000f28:	69ab      	ldr	r3, [r5, #24]
 8000f2a:	b913      	cbnz	r3, 8000f32 <__swsetup_r+0x16>
 8000f2c:	4628      	mov	r0, r5
 8000f2e:	f7ff fb57 	bl	80005e0 <__sinit>
 8000f32:	4b2e      	ldr	r3, [pc, #184]	; (8000fec <__swsetup_r+0xd0>)
 8000f34:	429c      	cmp	r4, r3
 8000f36:	d10f      	bne.n	8000f58 <__swsetup_r+0x3c>
 8000f38:	686c      	ldr	r4, [r5, #4]
 8000f3a:	89a3      	ldrh	r3, [r4, #12]
 8000f3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f40:	0719      	lsls	r1, r3, #28
 8000f42:	d42c      	bmi.n	8000f9e <__swsetup_r+0x82>
 8000f44:	06dd      	lsls	r5, r3, #27
 8000f46:	d411      	bmi.n	8000f6c <__swsetup_r+0x50>
 8000f48:	2309      	movs	r3, #9
 8000f4a:	6033      	str	r3, [r6, #0]
 8000f4c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000f50:	81a3      	strh	r3, [r4, #12]
 8000f52:	f04f 30ff 	mov.w	r0, #4294967295
 8000f56:	e03e      	b.n	8000fd6 <__swsetup_r+0xba>
 8000f58:	4b25      	ldr	r3, [pc, #148]	; (8000ff0 <__swsetup_r+0xd4>)
 8000f5a:	429c      	cmp	r4, r3
 8000f5c:	d101      	bne.n	8000f62 <__swsetup_r+0x46>
 8000f5e:	68ac      	ldr	r4, [r5, #8]
 8000f60:	e7eb      	b.n	8000f3a <__swsetup_r+0x1e>
 8000f62:	4b24      	ldr	r3, [pc, #144]	; (8000ff4 <__swsetup_r+0xd8>)
 8000f64:	429c      	cmp	r4, r3
 8000f66:	bf08      	it	eq
 8000f68:	68ec      	ldreq	r4, [r5, #12]
 8000f6a:	e7e6      	b.n	8000f3a <__swsetup_r+0x1e>
 8000f6c:	0758      	lsls	r0, r3, #29
 8000f6e:	d512      	bpl.n	8000f96 <__swsetup_r+0x7a>
 8000f70:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f72:	b141      	cbz	r1, 8000f86 <__swsetup_r+0x6a>
 8000f74:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f78:	4299      	cmp	r1, r3
 8000f7a:	d002      	beq.n	8000f82 <__swsetup_r+0x66>
 8000f7c:	4630      	mov	r0, r6
 8000f7e:	f000 f98f 	bl	80012a0 <_free_r>
 8000f82:	2300      	movs	r3, #0
 8000f84:	6363      	str	r3, [r4, #52]	; 0x34
 8000f86:	89a3      	ldrh	r3, [r4, #12]
 8000f88:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000f8c:	81a3      	strh	r3, [r4, #12]
 8000f8e:	2300      	movs	r3, #0
 8000f90:	6063      	str	r3, [r4, #4]
 8000f92:	6923      	ldr	r3, [r4, #16]
 8000f94:	6023      	str	r3, [r4, #0]
 8000f96:	89a3      	ldrh	r3, [r4, #12]
 8000f98:	f043 0308 	orr.w	r3, r3, #8
 8000f9c:	81a3      	strh	r3, [r4, #12]
 8000f9e:	6923      	ldr	r3, [r4, #16]
 8000fa0:	b94b      	cbnz	r3, 8000fb6 <__swsetup_r+0x9a>
 8000fa2:	89a3      	ldrh	r3, [r4, #12]
 8000fa4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000fa8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000fac:	d003      	beq.n	8000fb6 <__swsetup_r+0x9a>
 8000fae:	4621      	mov	r1, r4
 8000fb0:	4630      	mov	r0, r6
 8000fb2:	f000 f929 	bl	8001208 <__smakebuf_r>
 8000fb6:	89a0      	ldrh	r0, [r4, #12]
 8000fb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000fbc:	f010 0301 	ands.w	r3, r0, #1
 8000fc0:	d00a      	beq.n	8000fd8 <__swsetup_r+0xbc>
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	60a3      	str	r3, [r4, #8]
 8000fc6:	6963      	ldr	r3, [r4, #20]
 8000fc8:	425b      	negs	r3, r3
 8000fca:	61a3      	str	r3, [r4, #24]
 8000fcc:	6923      	ldr	r3, [r4, #16]
 8000fce:	b943      	cbnz	r3, 8000fe2 <__swsetup_r+0xc6>
 8000fd0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000fd4:	d1ba      	bne.n	8000f4c <__swsetup_r+0x30>
 8000fd6:	bd70      	pop	{r4, r5, r6, pc}
 8000fd8:	0781      	lsls	r1, r0, #30
 8000fda:	bf58      	it	pl
 8000fdc:	6963      	ldrpl	r3, [r4, #20]
 8000fde:	60a3      	str	r3, [r4, #8]
 8000fe0:	e7f4      	b.n	8000fcc <__swsetup_r+0xb0>
 8000fe2:	2000      	movs	r0, #0
 8000fe4:	e7f7      	b.n	8000fd6 <__swsetup_r+0xba>
 8000fe6:	bf00      	nop
 8000fe8:	20000000 	.word	0x20000000
 8000fec:	080013f4 	.word	0x080013f4
 8000ff0:	08001414 	.word	0x08001414
 8000ff4:	080013d4 	.word	0x080013d4

08000ff8 <_close_r>:
 8000ff8:	b538      	push	{r3, r4, r5, lr}
 8000ffa:	4d06      	ldr	r5, [pc, #24]	; (8001014 <_close_r+0x1c>)
 8000ffc:	2300      	movs	r3, #0
 8000ffe:	4604      	mov	r4, r0
 8001000:	4608      	mov	r0, r1
 8001002:	602b      	str	r3, [r5, #0]
 8001004:	f7ff f9b9 	bl	800037a <_close>
 8001008:	1c43      	adds	r3, r0, #1
 800100a:	d102      	bne.n	8001012 <_close_r+0x1a>
 800100c:	682b      	ldr	r3, [r5, #0]
 800100e:	b103      	cbz	r3, 8001012 <_close_r+0x1a>
 8001010:	6023      	str	r3, [r4, #0]
 8001012:	bd38      	pop	{r3, r4, r5, pc}
 8001014:	20000098 	.word	0x20000098

08001018 <__sflush_r>:
 8001018:	898a      	ldrh	r2, [r1, #12]
 800101a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800101e:	4605      	mov	r5, r0
 8001020:	0710      	lsls	r0, r2, #28
 8001022:	460c      	mov	r4, r1
 8001024:	d458      	bmi.n	80010d8 <__sflush_r+0xc0>
 8001026:	684b      	ldr	r3, [r1, #4]
 8001028:	2b00      	cmp	r3, #0
 800102a:	dc05      	bgt.n	8001038 <__sflush_r+0x20>
 800102c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800102e:	2b00      	cmp	r3, #0
 8001030:	dc02      	bgt.n	8001038 <__sflush_r+0x20>
 8001032:	2000      	movs	r0, #0
 8001034:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001038:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800103a:	2e00      	cmp	r6, #0
 800103c:	d0f9      	beq.n	8001032 <__sflush_r+0x1a>
 800103e:	2300      	movs	r3, #0
 8001040:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001044:	682f      	ldr	r7, [r5, #0]
 8001046:	602b      	str	r3, [r5, #0]
 8001048:	d032      	beq.n	80010b0 <__sflush_r+0x98>
 800104a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800104c:	89a3      	ldrh	r3, [r4, #12]
 800104e:	075a      	lsls	r2, r3, #29
 8001050:	d505      	bpl.n	800105e <__sflush_r+0x46>
 8001052:	6863      	ldr	r3, [r4, #4]
 8001054:	1ac0      	subs	r0, r0, r3
 8001056:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001058:	b10b      	cbz	r3, 800105e <__sflush_r+0x46>
 800105a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800105c:	1ac0      	subs	r0, r0, r3
 800105e:	2300      	movs	r3, #0
 8001060:	4602      	mov	r2, r0
 8001062:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001064:	6a21      	ldr	r1, [r4, #32]
 8001066:	4628      	mov	r0, r5
 8001068:	47b0      	blx	r6
 800106a:	1c43      	adds	r3, r0, #1
 800106c:	89a3      	ldrh	r3, [r4, #12]
 800106e:	d106      	bne.n	800107e <__sflush_r+0x66>
 8001070:	6829      	ldr	r1, [r5, #0]
 8001072:	291d      	cmp	r1, #29
 8001074:	d82c      	bhi.n	80010d0 <__sflush_r+0xb8>
 8001076:	4a2a      	ldr	r2, [pc, #168]	; (8001120 <__sflush_r+0x108>)
 8001078:	40ca      	lsrs	r2, r1
 800107a:	07d6      	lsls	r6, r2, #31
 800107c:	d528      	bpl.n	80010d0 <__sflush_r+0xb8>
 800107e:	2200      	movs	r2, #0
 8001080:	6062      	str	r2, [r4, #4]
 8001082:	04d9      	lsls	r1, r3, #19
 8001084:	6922      	ldr	r2, [r4, #16]
 8001086:	6022      	str	r2, [r4, #0]
 8001088:	d504      	bpl.n	8001094 <__sflush_r+0x7c>
 800108a:	1c42      	adds	r2, r0, #1
 800108c:	d101      	bne.n	8001092 <__sflush_r+0x7a>
 800108e:	682b      	ldr	r3, [r5, #0]
 8001090:	b903      	cbnz	r3, 8001094 <__sflush_r+0x7c>
 8001092:	6560      	str	r0, [r4, #84]	; 0x54
 8001094:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001096:	602f      	str	r7, [r5, #0]
 8001098:	2900      	cmp	r1, #0
 800109a:	d0ca      	beq.n	8001032 <__sflush_r+0x1a>
 800109c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010a0:	4299      	cmp	r1, r3
 80010a2:	d002      	beq.n	80010aa <__sflush_r+0x92>
 80010a4:	4628      	mov	r0, r5
 80010a6:	f000 f8fb 	bl	80012a0 <_free_r>
 80010aa:	2000      	movs	r0, #0
 80010ac:	6360      	str	r0, [r4, #52]	; 0x34
 80010ae:	e7c1      	b.n	8001034 <__sflush_r+0x1c>
 80010b0:	6a21      	ldr	r1, [r4, #32]
 80010b2:	2301      	movs	r3, #1
 80010b4:	4628      	mov	r0, r5
 80010b6:	47b0      	blx	r6
 80010b8:	1c41      	adds	r1, r0, #1
 80010ba:	d1c7      	bne.n	800104c <__sflush_r+0x34>
 80010bc:	682b      	ldr	r3, [r5, #0]
 80010be:	2b00      	cmp	r3, #0
 80010c0:	d0c4      	beq.n	800104c <__sflush_r+0x34>
 80010c2:	2b1d      	cmp	r3, #29
 80010c4:	d001      	beq.n	80010ca <__sflush_r+0xb2>
 80010c6:	2b16      	cmp	r3, #22
 80010c8:	d101      	bne.n	80010ce <__sflush_r+0xb6>
 80010ca:	602f      	str	r7, [r5, #0]
 80010cc:	e7b1      	b.n	8001032 <__sflush_r+0x1a>
 80010ce:	89a3      	ldrh	r3, [r4, #12]
 80010d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010d4:	81a3      	strh	r3, [r4, #12]
 80010d6:	e7ad      	b.n	8001034 <__sflush_r+0x1c>
 80010d8:	690f      	ldr	r7, [r1, #16]
 80010da:	2f00      	cmp	r7, #0
 80010dc:	d0a9      	beq.n	8001032 <__sflush_r+0x1a>
 80010de:	0793      	lsls	r3, r2, #30
 80010e0:	680e      	ldr	r6, [r1, #0]
 80010e2:	bf08      	it	eq
 80010e4:	694b      	ldreq	r3, [r1, #20]
 80010e6:	600f      	str	r7, [r1, #0]
 80010e8:	bf18      	it	ne
 80010ea:	2300      	movne	r3, #0
 80010ec:	eba6 0807 	sub.w	r8, r6, r7
 80010f0:	608b      	str	r3, [r1, #8]
 80010f2:	f1b8 0f00 	cmp.w	r8, #0
 80010f6:	dd9c      	ble.n	8001032 <__sflush_r+0x1a>
 80010f8:	6a21      	ldr	r1, [r4, #32]
 80010fa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80010fc:	4643      	mov	r3, r8
 80010fe:	463a      	mov	r2, r7
 8001100:	4628      	mov	r0, r5
 8001102:	47b0      	blx	r6
 8001104:	2800      	cmp	r0, #0
 8001106:	dc06      	bgt.n	8001116 <__sflush_r+0xfe>
 8001108:	89a3      	ldrh	r3, [r4, #12]
 800110a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800110e:	81a3      	strh	r3, [r4, #12]
 8001110:	f04f 30ff 	mov.w	r0, #4294967295
 8001114:	e78e      	b.n	8001034 <__sflush_r+0x1c>
 8001116:	4407      	add	r7, r0
 8001118:	eba8 0800 	sub.w	r8, r8, r0
 800111c:	e7e9      	b.n	80010f2 <__sflush_r+0xda>
 800111e:	bf00      	nop
 8001120:	20400001 	.word	0x20400001

08001124 <_fflush_r>:
 8001124:	b538      	push	{r3, r4, r5, lr}
 8001126:	690b      	ldr	r3, [r1, #16]
 8001128:	4605      	mov	r5, r0
 800112a:	460c      	mov	r4, r1
 800112c:	b913      	cbnz	r3, 8001134 <_fflush_r+0x10>
 800112e:	2500      	movs	r5, #0
 8001130:	4628      	mov	r0, r5
 8001132:	bd38      	pop	{r3, r4, r5, pc}
 8001134:	b118      	cbz	r0, 800113e <_fflush_r+0x1a>
 8001136:	6983      	ldr	r3, [r0, #24]
 8001138:	b90b      	cbnz	r3, 800113e <_fflush_r+0x1a>
 800113a:	f7ff fa51 	bl	80005e0 <__sinit>
 800113e:	4b14      	ldr	r3, [pc, #80]	; (8001190 <_fflush_r+0x6c>)
 8001140:	429c      	cmp	r4, r3
 8001142:	d11b      	bne.n	800117c <_fflush_r+0x58>
 8001144:	686c      	ldr	r4, [r5, #4]
 8001146:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800114a:	2b00      	cmp	r3, #0
 800114c:	d0ef      	beq.n	800112e <_fflush_r+0xa>
 800114e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001150:	07d0      	lsls	r0, r2, #31
 8001152:	d404      	bmi.n	800115e <_fflush_r+0x3a>
 8001154:	0599      	lsls	r1, r3, #22
 8001156:	d402      	bmi.n	800115e <_fflush_r+0x3a>
 8001158:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800115a:	f7ff fadf 	bl	800071c <__retarget_lock_acquire_recursive>
 800115e:	4628      	mov	r0, r5
 8001160:	4621      	mov	r1, r4
 8001162:	f7ff ff59 	bl	8001018 <__sflush_r>
 8001166:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001168:	07da      	lsls	r2, r3, #31
 800116a:	4605      	mov	r5, r0
 800116c:	d4e0      	bmi.n	8001130 <_fflush_r+0xc>
 800116e:	89a3      	ldrh	r3, [r4, #12]
 8001170:	059b      	lsls	r3, r3, #22
 8001172:	d4dd      	bmi.n	8001130 <_fflush_r+0xc>
 8001174:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001176:	f7ff fad2 	bl	800071e <__retarget_lock_release_recursive>
 800117a:	e7d9      	b.n	8001130 <_fflush_r+0xc>
 800117c:	4b05      	ldr	r3, [pc, #20]	; (8001194 <_fflush_r+0x70>)
 800117e:	429c      	cmp	r4, r3
 8001180:	d101      	bne.n	8001186 <_fflush_r+0x62>
 8001182:	68ac      	ldr	r4, [r5, #8]
 8001184:	e7df      	b.n	8001146 <_fflush_r+0x22>
 8001186:	4b04      	ldr	r3, [pc, #16]	; (8001198 <_fflush_r+0x74>)
 8001188:	429c      	cmp	r4, r3
 800118a:	bf08      	it	eq
 800118c:	68ec      	ldreq	r4, [r5, #12]
 800118e:	e7da      	b.n	8001146 <_fflush_r+0x22>
 8001190:	080013f4 	.word	0x080013f4
 8001194:	08001414 	.word	0x08001414
 8001198:	080013d4 	.word	0x080013d4

0800119c <_lseek_r>:
 800119c:	b538      	push	{r3, r4, r5, lr}
 800119e:	4d07      	ldr	r5, [pc, #28]	; (80011bc <_lseek_r+0x20>)
 80011a0:	4604      	mov	r4, r0
 80011a2:	4608      	mov	r0, r1
 80011a4:	4611      	mov	r1, r2
 80011a6:	2200      	movs	r2, #0
 80011a8:	602a      	str	r2, [r5, #0]
 80011aa:	461a      	mov	r2, r3
 80011ac:	f7ff f909 	bl	80003c2 <_lseek>
 80011b0:	1c43      	adds	r3, r0, #1
 80011b2:	d102      	bne.n	80011ba <_lseek_r+0x1e>
 80011b4:	682b      	ldr	r3, [r5, #0]
 80011b6:	b103      	cbz	r3, 80011ba <_lseek_r+0x1e>
 80011b8:	6023      	str	r3, [r4, #0]
 80011ba:	bd38      	pop	{r3, r4, r5, pc}
 80011bc:	20000098 	.word	0x20000098

080011c0 <__swhatbuf_r>:
 80011c0:	b570      	push	{r4, r5, r6, lr}
 80011c2:	460e      	mov	r6, r1
 80011c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011c8:	2900      	cmp	r1, #0
 80011ca:	b096      	sub	sp, #88	; 0x58
 80011cc:	4614      	mov	r4, r2
 80011ce:	461d      	mov	r5, r3
 80011d0:	da07      	bge.n	80011e2 <__swhatbuf_r+0x22>
 80011d2:	2300      	movs	r3, #0
 80011d4:	602b      	str	r3, [r5, #0]
 80011d6:	89b3      	ldrh	r3, [r6, #12]
 80011d8:	061a      	lsls	r2, r3, #24
 80011da:	d410      	bmi.n	80011fe <__swhatbuf_r+0x3e>
 80011dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011e0:	e00e      	b.n	8001200 <__swhatbuf_r+0x40>
 80011e2:	466a      	mov	r2, sp
 80011e4:	f000 f8bc 	bl	8001360 <_fstat_r>
 80011e8:	2800      	cmp	r0, #0
 80011ea:	dbf2      	blt.n	80011d2 <__swhatbuf_r+0x12>
 80011ec:	9a01      	ldr	r2, [sp, #4]
 80011ee:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80011f2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80011f6:	425a      	negs	r2, r3
 80011f8:	415a      	adcs	r2, r3
 80011fa:	602a      	str	r2, [r5, #0]
 80011fc:	e7ee      	b.n	80011dc <__swhatbuf_r+0x1c>
 80011fe:	2340      	movs	r3, #64	; 0x40
 8001200:	2000      	movs	r0, #0
 8001202:	6023      	str	r3, [r4, #0]
 8001204:	b016      	add	sp, #88	; 0x58
 8001206:	bd70      	pop	{r4, r5, r6, pc}

08001208 <__smakebuf_r>:
 8001208:	898b      	ldrh	r3, [r1, #12]
 800120a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800120c:	079d      	lsls	r5, r3, #30
 800120e:	4606      	mov	r6, r0
 8001210:	460c      	mov	r4, r1
 8001212:	d507      	bpl.n	8001224 <__smakebuf_r+0x1c>
 8001214:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001218:	6023      	str	r3, [r4, #0]
 800121a:	6123      	str	r3, [r4, #16]
 800121c:	2301      	movs	r3, #1
 800121e:	6163      	str	r3, [r4, #20]
 8001220:	b002      	add	sp, #8
 8001222:	bd70      	pop	{r4, r5, r6, pc}
 8001224:	ab01      	add	r3, sp, #4
 8001226:	466a      	mov	r2, sp
 8001228:	f7ff ffca 	bl	80011c0 <__swhatbuf_r>
 800122c:	9900      	ldr	r1, [sp, #0]
 800122e:	4605      	mov	r5, r0
 8001230:	4630      	mov	r0, r6
 8001232:	f7ff fa75 	bl	8000720 <_malloc_r>
 8001236:	b948      	cbnz	r0, 800124c <__smakebuf_r+0x44>
 8001238:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800123c:	059a      	lsls	r2, r3, #22
 800123e:	d4ef      	bmi.n	8001220 <__smakebuf_r+0x18>
 8001240:	f023 0303 	bic.w	r3, r3, #3
 8001244:	f043 0302 	orr.w	r3, r3, #2
 8001248:	81a3      	strh	r3, [r4, #12]
 800124a:	e7e3      	b.n	8001214 <__smakebuf_r+0xc>
 800124c:	4b0d      	ldr	r3, [pc, #52]	; (8001284 <__smakebuf_r+0x7c>)
 800124e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001250:	89a3      	ldrh	r3, [r4, #12]
 8001252:	6020      	str	r0, [r4, #0]
 8001254:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001258:	81a3      	strh	r3, [r4, #12]
 800125a:	9b00      	ldr	r3, [sp, #0]
 800125c:	6163      	str	r3, [r4, #20]
 800125e:	9b01      	ldr	r3, [sp, #4]
 8001260:	6120      	str	r0, [r4, #16]
 8001262:	b15b      	cbz	r3, 800127c <__smakebuf_r+0x74>
 8001264:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001268:	4630      	mov	r0, r6
 800126a:	f000 f88b 	bl	8001384 <_isatty_r>
 800126e:	b128      	cbz	r0, 800127c <__smakebuf_r+0x74>
 8001270:	89a3      	ldrh	r3, [r4, #12]
 8001272:	f023 0303 	bic.w	r3, r3, #3
 8001276:	f043 0301 	orr.w	r3, r3, #1
 800127a:	81a3      	strh	r3, [r4, #12]
 800127c:	89a0      	ldrh	r0, [r4, #12]
 800127e:	4305      	orrs	r5, r0
 8001280:	81a5      	strh	r5, [r4, #12]
 8001282:	e7cd      	b.n	8001220 <__smakebuf_r+0x18>
 8001284:	08000579 	.word	0x08000579

08001288 <__malloc_lock>:
 8001288:	4801      	ldr	r0, [pc, #4]	; (8001290 <__malloc_lock+0x8>)
 800128a:	f7ff ba47 	b.w	800071c <__retarget_lock_acquire_recursive>
 800128e:	bf00      	nop
 8001290:	20000090 	.word	0x20000090

08001294 <__malloc_unlock>:
 8001294:	4801      	ldr	r0, [pc, #4]	; (800129c <__malloc_unlock+0x8>)
 8001296:	f7ff ba42 	b.w	800071e <__retarget_lock_release_recursive>
 800129a:	bf00      	nop
 800129c:	20000090 	.word	0x20000090

080012a0 <_free_r>:
 80012a0:	b538      	push	{r3, r4, r5, lr}
 80012a2:	4605      	mov	r5, r0
 80012a4:	2900      	cmp	r1, #0
 80012a6:	d045      	beq.n	8001334 <_free_r+0x94>
 80012a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80012ac:	1f0c      	subs	r4, r1, #4
 80012ae:	2b00      	cmp	r3, #0
 80012b0:	bfb8      	it	lt
 80012b2:	18e4      	addlt	r4, r4, r3
 80012b4:	f7ff ffe8 	bl	8001288 <__malloc_lock>
 80012b8:	4a1f      	ldr	r2, [pc, #124]	; (8001338 <_free_r+0x98>)
 80012ba:	6813      	ldr	r3, [r2, #0]
 80012bc:	4610      	mov	r0, r2
 80012be:	b933      	cbnz	r3, 80012ce <_free_r+0x2e>
 80012c0:	6063      	str	r3, [r4, #4]
 80012c2:	6014      	str	r4, [r2, #0]
 80012c4:	4628      	mov	r0, r5
 80012c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80012ca:	f7ff bfe3 	b.w	8001294 <__malloc_unlock>
 80012ce:	42a3      	cmp	r3, r4
 80012d0:	d90b      	bls.n	80012ea <_free_r+0x4a>
 80012d2:	6821      	ldr	r1, [r4, #0]
 80012d4:	1862      	adds	r2, r4, r1
 80012d6:	4293      	cmp	r3, r2
 80012d8:	bf04      	itt	eq
 80012da:	681a      	ldreq	r2, [r3, #0]
 80012dc:	685b      	ldreq	r3, [r3, #4]
 80012de:	6063      	str	r3, [r4, #4]
 80012e0:	bf04      	itt	eq
 80012e2:	1852      	addeq	r2, r2, r1
 80012e4:	6022      	streq	r2, [r4, #0]
 80012e6:	6004      	str	r4, [r0, #0]
 80012e8:	e7ec      	b.n	80012c4 <_free_r+0x24>
 80012ea:	461a      	mov	r2, r3
 80012ec:	685b      	ldr	r3, [r3, #4]
 80012ee:	b10b      	cbz	r3, 80012f4 <_free_r+0x54>
 80012f0:	42a3      	cmp	r3, r4
 80012f2:	d9fa      	bls.n	80012ea <_free_r+0x4a>
 80012f4:	6811      	ldr	r1, [r2, #0]
 80012f6:	1850      	adds	r0, r2, r1
 80012f8:	42a0      	cmp	r0, r4
 80012fa:	d10b      	bne.n	8001314 <_free_r+0x74>
 80012fc:	6820      	ldr	r0, [r4, #0]
 80012fe:	4401      	add	r1, r0
 8001300:	1850      	adds	r0, r2, r1
 8001302:	4283      	cmp	r3, r0
 8001304:	6011      	str	r1, [r2, #0]
 8001306:	d1dd      	bne.n	80012c4 <_free_r+0x24>
 8001308:	6818      	ldr	r0, [r3, #0]
 800130a:	685b      	ldr	r3, [r3, #4]
 800130c:	6053      	str	r3, [r2, #4]
 800130e:	4401      	add	r1, r0
 8001310:	6011      	str	r1, [r2, #0]
 8001312:	e7d7      	b.n	80012c4 <_free_r+0x24>
 8001314:	d902      	bls.n	800131c <_free_r+0x7c>
 8001316:	230c      	movs	r3, #12
 8001318:	602b      	str	r3, [r5, #0]
 800131a:	e7d3      	b.n	80012c4 <_free_r+0x24>
 800131c:	6820      	ldr	r0, [r4, #0]
 800131e:	1821      	adds	r1, r4, r0
 8001320:	428b      	cmp	r3, r1
 8001322:	bf04      	itt	eq
 8001324:	6819      	ldreq	r1, [r3, #0]
 8001326:	685b      	ldreq	r3, [r3, #4]
 8001328:	6063      	str	r3, [r4, #4]
 800132a:	bf04      	itt	eq
 800132c:	1809      	addeq	r1, r1, r0
 800132e:	6021      	streq	r1, [r4, #0]
 8001330:	6054      	str	r4, [r2, #4]
 8001332:	e7c7      	b.n	80012c4 <_free_r+0x24>
 8001334:	bd38      	pop	{r3, r4, r5, pc}
 8001336:	bf00      	nop
 8001338:	20000084 	.word	0x20000084

0800133c <_read_r>:
 800133c:	b538      	push	{r3, r4, r5, lr}
 800133e:	4d07      	ldr	r5, [pc, #28]	; (800135c <_read_r+0x20>)
 8001340:	4604      	mov	r4, r0
 8001342:	4608      	mov	r0, r1
 8001344:	4611      	mov	r1, r2
 8001346:	2200      	movs	r2, #0
 8001348:	602a      	str	r2, [r5, #0]
 800134a:	461a      	mov	r2, r3
 800134c:	f7fe ffdc 	bl	8000308 <_read>
 8001350:	1c43      	adds	r3, r0, #1
 8001352:	d102      	bne.n	800135a <_read_r+0x1e>
 8001354:	682b      	ldr	r3, [r5, #0]
 8001356:	b103      	cbz	r3, 800135a <_read_r+0x1e>
 8001358:	6023      	str	r3, [r4, #0]
 800135a:	bd38      	pop	{r3, r4, r5, pc}
 800135c:	20000098 	.word	0x20000098

08001360 <_fstat_r>:
 8001360:	b538      	push	{r3, r4, r5, lr}
 8001362:	4d07      	ldr	r5, [pc, #28]	; (8001380 <_fstat_r+0x20>)
 8001364:	2300      	movs	r3, #0
 8001366:	4604      	mov	r4, r0
 8001368:	4608      	mov	r0, r1
 800136a:	4611      	mov	r1, r2
 800136c:	602b      	str	r3, [r5, #0]
 800136e:	f7ff f80f 	bl	8000390 <_fstat>
 8001372:	1c43      	adds	r3, r0, #1
 8001374:	d102      	bne.n	800137c <_fstat_r+0x1c>
 8001376:	682b      	ldr	r3, [r5, #0]
 8001378:	b103      	cbz	r3, 800137c <_fstat_r+0x1c>
 800137a:	6023      	str	r3, [r4, #0]
 800137c:	bd38      	pop	{r3, r4, r5, pc}
 800137e:	bf00      	nop
 8001380:	20000098 	.word	0x20000098

08001384 <_isatty_r>:
 8001384:	b538      	push	{r3, r4, r5, lr}
 8001386:	4d06      	ldr	r5, [pc, #24]	; (80013a0 <_isatty_r+0x1c>)
 8001388:	2300      	movs	r3, #0
 800138a:	4604      	mov	r4, r0
 800138c:	4608      	mov	r0, r1
 800138e:	602b      	str	r3, [r5, #0]
 8001390:	f7ff f80d 	bl	80003ae <_isatty>
 8001394:	1c43      	adds	r3, r0, #1
 8001396:	d102      	bne.n	800139e <_isatty_r+0x1a>
 8001398:	682b      	ldr	r3, [r5, #0]
 800139a:	b103      	cbz	r3, 800139e <_isatty_r+0x1a>
 800139c:	6023      	str	r3, [r4, #0]
 800139e:	bd38      	pop	{r3, r4, r5, pc}
 80013a0:	20000098 	.word	0x20000098

080013a4 <_init>:
 80013a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013a6:	bf00      	nop
 80013a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013aa:	bc08      	pop	{r3}
 80013ac:	469e      	mov	lr, r3
 80013ae:	4770      	bx	lr

080013b0 <_fini>:
 80013b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013b2:	bf00      	nop
 80013b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013b6:	bc08      	pop	{r3}
 80013b8:	469e      	mov	lr, r3
 80013ba:	4770      	bx	lr
